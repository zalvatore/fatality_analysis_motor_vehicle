{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Training"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "***"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Libraries\n",
    "import os\n",
    "import json\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from joblib import dump\n",
    "from sklearn.metrics import f1_score\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.neural_network import MLPClassifier\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from scipy.stats import chi2_contingency\n",
    "from feature_engine.encoding import OneHotEncoder\n",
    "from sklearn.metrics import accuracy_score\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Enviorment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Enviorment Tree\n",
    "ROOT_DIR = os.path.dirname(os.getcwd())\n",
    "MODEL_INPUTS_OUTPUTS = os.path.join(ROOT_DIR, 'model_inputs_outputs/')\n",
    "INPUT_DIR = os.path.join(MODEL_INPUTS_OUTPUTS, \"inputs\")\n",
    "INPUT_SCHEMA_DIR = os.path.join(INPUT_DIR, \"schema\")\n",
    "DATA_DIR = os.path.join(INPUT_DIR, \"data\")\n",
    "TRAIN_DIR = os.path.join(DATA_DIR, \"training\")\n",
    "TEST_DIR = os.path.join(DATA_DIR, \"testing\")\n",
    "MODEL_PATH = os.path.join(MODEL_INPUTS_OUTPUTS, \"model\")\n",
    "MODEL_ARTIFACTS_PATH = os.path.join(MODEL_PATH, \"artifacts\")\n",
    "OHE_ENCODER_FILE = os.path.join(MODEL_ARTIFACTS_PATH, 'ohe.joblib')\n",
    "LABEL_ENCODER_FILE = os.path.join(MODEL_ARTIFACTS_PATH, 'label_encoder.joblib')\n",
    "PREDICTOR_DIR_PATH = os.path.join(MODEL_ARTIFACTS_PATH, \"predictor\")\n",
    "PREDICTOR_FILE_PATH = os.path.join(PREDICTOR_DIR_PATH, \"predictor.joblib\")\n",
    "IMPUTATION_FILE = os.path.join(MODEL_ARTIFACTS_PATH, 'imputation.joblib')\n",
    "\n",
    "if not os.path.exists(MODEL_ARTIFACTS_PATH):\n",
    "    os.makedirs(MODEL_ARTIFACTS_PATH)\n",
    "if not os.path.exists(PREDICTOR_DIR_PATH):\n",
    "    os.makedirs(PREDICTOR_DIR_PATH)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Load Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Reading schema and clasifying\n",
    "file_name = [f for f in os.listdir(INPUT_SCHEMA_DIR) if f.endswith('json')][0]\n",
    "schema_path = os.path.join(INPUT_SCHEMA_DIR, file_name)\n",
    "with open(schema_path, \"r\", encoding=\"utf-8\") as file:\n",
    "    schema = json.load(file)\n",
    "features = schema['features']\n",
    "\n",
    "numeric_features = []\n",
    "categorical_features = []\n",
    "for f in features:\n",
    "    if f['dataType'] == 'CATEGORICAL':\n",
    "        categorical_features.append(f['name'])\n",
    "    else:\n",
    "        numeric_features.append(f['name'])\n",
    "\n",
    "id_feature = schema['id']['name']\n",
    "target_feature = schema['target']['name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Load data to Dataframe\n",
    "file_name = [f for f in os.listdir(TRAIN_DIR) if f.endswith('.csv')][0]\n",
    "file_path = os.path.join(TRAIN_DIR, file_name)\n",
    "df = pd.read_csv(file_path)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Quality Report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Data_Quality_Report(df):\n",
    "\n",
    "    # Initial table\n",
    "    freqDF = pd.DataFrame(columns=['Feature',\n",
    "                                   'Mode',\n",
    "                                   'Mode Freq.',\n",
    "                                   'Mode %',\n",
    "                                   '2nd Mode',\n",
    "                                   '2nd Mode Freq.',\n",
    "                                   '2nd Mode %'])\n",
    "    for col in df.columns:\n",
    "        freq = df[col].value_counts()\n",
    "        freqdf = freq.to_frame()\n",
    "        fRow = freqdf.iloc[0]\n",
    "        secRow = freqdf.iloc[1] if len(freqdf) > 1 else pd.Series([0, 0], index=['index', col])\n",
    "        fPrct = fRow[0] / len(df[col])\n",
    "        secPrct = secRow[0] / len(df[col]) if len(freqdf) > 1 else 0\n",
    "        mode1 = fRow.name\n",
    "        mode2 = secRow.name\n",
    "        new_row = {'Feature': col,\n",
    "                   'Mode': mode1,\n",
    "                   'Mode Freq.': fRow[0],\n",
    "                   'Mode %': fPrct,\n",
    "                   '2nd Mode': mode2,\n",
    "                   '2nd Mode Freq.': secRow[0],\n",
    "                   '2nd Mode %': secPrct}\n",
    "        freqDF = pd.concat([freqDF, pd.DataFrame([new_row])], ignore_index=True)\n",
    "        \n",
    "    freqDF = freqDF.set_index('Feature')\n",
    "\n",
    "    # Nulls, Counts, Cardinality\n",
    "    NUllFeatures = (df.isnull().sum() / df.shape[0]).round(4).sort_values(ascending=False)\n",
    "    Count = df.count()\n",
    "    uni = df.nunique()\n",
    "\n",
    "    # Formatting\n",
    "    NUllFeatures = NUllFeatures.to_frame(name=\"% Miss.\")\n",
    "    Count = Count.to_frame(name=\"Count\")\n",
    "    uni = uni.to_frame(name=\"Card.\")\n",
    "    result = pd.concat([Count, NUllFeatures, uni, freqDF], axis=1)\n",
    "    result = result.style.format({'% Miss.': \"{:.1%}\",\n",
    "                                  'Mode %': \"{:.0%}\",\n",
    "                                  '2nd Mode %': \"{:.0%}\",\n",
    "                                  'Count': \"{:,}\",\n",
    "                                  'Card.': \"{:,}\",\n",
    "                                  'Mode Freq.': \"{:,}\",\n",
    "                                  '2nd Mode Freq.': \"{:,}\"})\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_b1092\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_b1092_level0_col0\" class=\"col_heading level0 col0\" >Count</th>\n",
       "      <th id=\"T_b1092_level0_col1\" class=\"col_heading level0 col1\" >% Miss.</th>\n",
       "      <th id=\"T_b1092_level0_col2\" class=\"col_heading level0 col2\" >Card.</th>\n",
       "      <th id=\"T_b1092_level0_col3\" class=\"col_heading level0 col3\" >Mode</th>\n",
       "      <th id=\"T_b1092_level0_col4\" class=\"col_heading level0 col4\" >Mode Freq.</th>\n",
       "      <th id=\"T_b1092_level0_col5\" class=\"col_heading level0 col5\" >Mode %</th>\n",
       "      <th id=\"T_b1092_level0_col6\" class=\"col_heading level0 col6\" >2nd Mode</th>\n",
       "      <th id=\"T_b1092_level0_col7\" class=\"col_heading level0 col7\" >2nd Mode Freq.</th>\n",
       "      <th id=\"T_b1092_level0_col8\" class=\"col_heading level0 col8\" >2nd Mode %</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row0\" class=\"row_heading level0 row0\" >u_id</th>\n",
       "      <td id=\"T_b1092_row0_col0\" class=\"data row0 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row0_col1\" class=\"data row0 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row0_col2\" class=\"data row0 col2\" >45,286</td>\n",
       "      <td id=\"T_b1092_row0_col3\" class=\"data row0 col3\" >32083</td>\n",
       "      <td id=\"T_b1092_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "      <td id=\"T_b1092_row0_col5\" class=\"data row0 col5\" >0%</td>\n",
       "      <td id=\"T_b1092_row0_col6\" class=\"data row0 col6\" >22185</td>\n",
       "      <td id=\"T_b1092_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "      <td id=\"T_b1092_row0_col8\" class=\"data row0 col8\" >0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row1\" class=\"row_heading level0 row1\" >fatals</th>\n",
       "      <td id=\"T_b1092_row1_col0\" class=\"data row1 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row1_col1\" class=\"data row1 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row1_col2\" class=\"data row1 col2\" >8</td>\n",
       "      <td id=\"T_b1092_row1_col3\" class=\"data row1 col3\" >1</td>\n",
       "      <td id=\"T_b1092_row1_col4\" class=\"data row1 col4\" >43,447</td>\n",
       "      <td id=\"T_b1092_row1_col5\" class=\"data row1 col5\" >96%</td>\n",
       "      <td id=\"T_b1092_row1_col6\" class=\"data row1 col6\" >2</td>\n",
       "      <td id=\"T_b1092_row1_col7\" class=\"data row1 col7\" >1,581</td>\n",
       "      <td id=\"T_b1092_row1_col8\" class=\"data row1 col8\" >3%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row2\" class=\"row_heading level0 row2\" >a_ct</th>\n",
       "      <td id=\"T_b1092_row2_col0\" class=\"data row2 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row2_col1\" class=\"data row2 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row2_col2\" class=\"data row2 col2\" >1</td>\n",
       "      <td id=\"T_b1092_row2_col3\" class=\"data row2 col3\" >Single-Vehicle Crash</td>\n",
       "      <td id=\"T_b1092_row2_col4\" class=\"data row2 col4\" >45,286</td>\n",
       "      <td id=\"T_b1092_row2_col5\" class=\"data row2 col5\" >100%</td>\n",
       "      <td id=\"T_b1092_row2_col6\" class=\"data row2 col6\" >None</td>\n",
       "      <td id=\"T_b1092_row2_col7\" class=\"data row2 col7\" >0</td>\n",
       "      <td id=\"T_b1092_row2_col8\" class=\"data row2 col8\" >0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row3\" class=\"row_heading level0 row3\" >a_ped_f</th>\n",
       "      <td id=\"T_b1092_row3_col0\" class=\"data row3 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row3_col1\" class=\"data row3 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row3_col2\" class=\"data row3 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row3_col3\" class=\"data row3 col3\" >Other Crash</td>\n",
       "      <td id=\"T_b1092_row3_col4\" class=\"data row3 col4\" >33,785</td>\n",
       "      <td id=\"T_b1092_row3_col5\" class=\"data row3 col5\" >75%</td>\n",
       "      <td id=\"T_b1092_row3_col6\" class=\"data row3 col6\" >Pedestrian Fatality Involved Crash</td>\n",
       "      <td id=\"T_b1092_row3_col7\" class=\"data row3 col7\" >11,501</td>\n",
       "      <td id=\"T_b1092_row3_col8\" class=\"data row3 col8\" >25%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row4\" class=\"row_heading level0 row4\" >a_pedal_f</th>\n",
       "      <td id=\"T_b1092_row4_col0\" class=\"data row4 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row4_col1\" class=\"data row4 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row4_col2\" class=\"data row4 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row4_col3\" class=\"data row4 col3\" >Other Crash</td>\n",
       "      <td id=\"T_b1092_row4_col4\" class=\"data row4 col4\" >43,544</td>\n",
       "      <td id=\"T_b1092_row4_col5\" class=\"data row4 col5\" >96%</td>\n",
       "      <td id=\"T_b1092_row4_col6\" class=\"data row4 col6\" >Pedalcyclist Fatality Involved Crash</td>\n",
       "      <td id=\"T_b1092_row4_col7\" class=\"data row4 col7\" >1,742</td>\n",
       "      <td id=\"T_b1092_row4_col8\" class=\"data row4 col8\" >4%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row5\" class=\"row_heading level0 row5\" >a_roll</th>\n",
       "      <td id=\"T_b1092_row5_col0\" class=\"data row5 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row5_col1\" class=\"data row5 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row5_col2\" class=\"data row5 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row5_col3\" class=\"data row5 col3\" >Other Crash</td>\n",
       "      <td id=\"T_b1092_row5_col4\" class=\"data row5 col4\" >31,583</td>\n",
       "      <td id=\"T_b1092_row5_col5\" class=\"data row5 col5\" >70%</td>\n",
       "      <td id=\"T_b1092_row5_col6\" class=\"data row5 col6\" >Rollover Involved Crash</td>\n",
       "      <td id=\"T_b1092_row5_col7\" class=\"data row5 col7\" >13,703</td>\n",
       "      <td id=\"T_b1092_row5_col8\" class=\"data row5 col8\" >30%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row6\" class=\"row_heading level0 row6\" >a_hr</th>\n",
       "      <td id=\"T_b1092_row6_col0\" class=\"data row6 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row6_col1\" class=\"data row6 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row6_col2\" class=\"data row6 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row6_col3\" class=\"data row6 col3\" >No - Hit and Run</td>\n",
       "      <td id=\"T_b1092_row6_col4\" class=\"data row6 col4\" >43,774</td>\n",
       "      <td id=\"T_b1092_row6_col5\" class=\"data row6 col5\" >97%</td>\n",
       "      <td id=\"T_b1092_row6_col6\" class=\"data row6 col6\" >Yes - Hit and Run</td>\n",
       "      <td id=\"T_b1092_row6_col7\" class=\"data row6 col7\" >1,512</td>\n",
       "      <td id=\"T_b1092_row6_col8\" class=\"data row6 col8\" >3%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row7\" class=\"row_heading level0 row7\" >a_polpur</th>\n",
       "      <td id=\"T_b1092_row7_col0\" class=\"data row7 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row7_col1\" class=\"data row7 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row7_col2\" class=\"data row7 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row7_col3\" class=\"data row7 col3\" >Other Crash</td>\n",
       "      <td id=\"T_b1092_row7_col4\" class=\"data row7 col4\" >44,783</td>\n",
       "      <td id=\"T_b1092_row7_col5\" class=\"data row7 col5\" >99%</td>\n",
       "      <td id=\"T_b1092_row7_col6\" class=\"data row7 col6\" >Police Pursuit Involved Crash</td>\n",
       "      <td id=\"T_b1092_row7_col7\" class=\"data row7 col7\" >503</td>\n",
       "      <td id=\"T_b1092_row7_col8\" class=\"data row7 col8\" >1%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row8\" class=\"row_heading level0 row8\" >month</th>\n",
       "      <td id=\"T_b1092_row8_col0\" class=\"data row8 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row8_col1\" class=\"data row8 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row8_col2\" class=\"data row8 col2\" >12</td>\n",
       "      <td id=\"T_b1092_row8_col3\" class=\"data row8 col3\" >7</td>\n",
       "      <td id=\"T_b1092_row8_col4\" class=\"data row8 col4\" >4,175</td>\n",
       "      <td id=\"T_b1092_row8_col5\" class=\"data row8 col5\" >9%</td>\n",
       "      <td id=\"T_b1092_row8_col6\" class=\"data row8 col6\" >10</td>\n",
       "      <td id=\"T_b1092_row8_col7\" class=\"data row8 col7\" >4,110</td>\n",
       "      <td id=\"T_b1092_row8_col8\" class=\"data row8 col8\" >9%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row9\" class=\"row_heading level0 row9\" >day</th>\n",
       "      <td id=\"T_b1092_row9_col0\" class=\"data row9 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row9_col1\" class=\"data row9 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row9_col2\" class=\"data row9 col2\" >31</td>\n",
       "      <td id=\"T_b1092_row9_col3\" class=\"data row9 col3\" >3</td>\n",
       "      <td id=\"T_b1092_row9_col4\" class=\"data row9 col4\" >1,590</td>\n",
       "      <td id=\"T_b1092_row9_col5\" class=\"data row9 col5\" >4%</td>\n",
       "      <td id=\"T_b1092_row9_col6\" class=\"data row9 col6\" >4</td>\n",
       "      <td id=\"T_b1092_row9_col7\" class=\"data row9 col7\" >1,577</td>\n",
       "      <td id=\"T_b1092_row9_col8\" class=\"data row9 col8\" >3%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row10\" class=\"row_heading level0 row10\" >day_week</th>\n",
       "      <td id=\"T_b1092_row10_col0\" class=\"data row10 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row10_col1\" class=\"data row10 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row10_col2\" class=\"data row10 col2\" >7</td>\n",
       "      <td id=\"T_b1092_row10_col3\" class=\"data row10 col3\" >sat</td>\n",
       "      <td id=\"T_b1092_row10_col4\" class=\"data row10 col4\" >8,373</td>\n",
       "      <td id=\"T_b1092_row10_col5\" class=\"data row10 col5\" >18%</td>\n",
       "      <td id=\"T_b1092_row10_col6\" class=\"data row10 col6\" >sun</td>\n",
       "      <td id=\"T_b1092_row10_col7\" class=\"data row10 col7\" >7,671</td>\n",
       "      <td id=\"T_b1092_row10_col8\" class=\"data row10 col8\" >17%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row11\" class=\"row_heading level0 row11\" >hour</th>\n",
       "      <td id=\"T_b1092_row11_col0\" class=\"data row11 col0\" >44,796</td>\n",
       "      <td id=\"T_b1092_row11_col1\" class=\"data row11 col1\" >1.1%</td>\n",
       "      <td id=\"T_b1092_row11_col2\" class=\"data row11 col2\" >24</td>\n",
       "      <td id=\"T_b1092_row11_col3\" class=\"data row11 col3\" >20.000000</td>\n",
       "      <td id=\"T_b1092_row11_col4\" class=\"data row11 col4\" >2,826</td>\n",
       "      <td id=\"T_b1092_row11_col5\" class=\"data row11 col5\" >6%</td>\n",
       "      <td id=\"T_b1092_row11_col6\" class=\"data row11 col6\" >21.000000</td>\n",
       "      <td id=\"T_b1092_row11_col7\" class=\"data row11 col7\" >2,739</td>\n",
       "      <td id=\"T_b1092_row11_col8\" class=\"data row11 col8\" >6%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row12\" class=\"row_heading level0 row12\" >minute</th>\n",
       "      <td id=\"T_b1092_row12_col0\" class=\"data row12 col0\" >44,795</td>\n",
       "      <td id=\"T_b1092_row12_col1\" class=\"data row12 col1\" >1.1%</td>\n",
       "      <td id=\"T_b1092_row12_col2\" class=\"data row12 col2\" >60</td>\n",
       "      <td id=\"T_b1092_row12_col3\" class=\"data row12 col3\" >0.000000</td>\n",
       "      <td id=\"T_b1092_row12_col4\" class=\"data row12 col4\" >2,596</td>\n",
       "      <td id=\"T_b1092_row12_col5\" class=\"data row12 col5\" >6%</td>\n",
       "      <td id=\"T_b1092_row12_col6\" class=\"data row12 col6\" >30.000000</td>\n",
       "      <td id=\"T_b1092_row12_col7\" class=\"data row12 col7\" >2,205</td>\n",
       "      <td id=\"T_b1092_row12_col8\" class=\"data row12 col8\" >5%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row13\" class=\"row_heading level0 row13\" >a_dow_type</th>\n",
       "      <td id=\"T_b1092_row13_col0\" class=\"data row13 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row13_col1\" class=\"data row13 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row13_col2\" class=\"data row13 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row13_col3\" class=\"data row13 col3\" >Weekday</td>\n",
       "      <td id=\"T_b1092_row13_col4\" class=\"data row13 col4\" >29,242</td>\n",
       "      <td id=\"T_b1092_row13_col5\" class=\"data row13 col5\" >65%</td>\n",
       "      <td id=\"T_b1092_row13_col6\" class=\"data row13 col6\" >Weekend</td>\n",
       "      <td id=\"T_b1092_row13_col7\" class=\"data row13 col7\" >16,044</td>\n",
       "      <td id=\"T_b1092_row13_col8\" class=\"data row13 col8\" >35%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row14\" class=\"row_heading level0 row14\" >a_tod_type</th>\n",
       "      <td id=\"T_b1092_row14_col0\" class=\"data row14 col0\" >44,796</td>\n",
       "      <td id=\"T_b1092_row14_col1\" class=\"data row14 col1\" >1.1%</td>\n",
       "      <td id=\"T_b1092_row14_col2\" class=\"data row14 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row14_col3\" class=\"data row14 col3\" >Nighttime</td>\n",
       "      <td id=\"T_b1092_row14_col4\" class=\"data row14 col4\" >26,385</td>\n",
       "      <td id=\"T_b1092_row14_col5\" class=\"data row14 col5\" >58%</td>\n",
       "      <td id=\"T_b1092_row14_col6\" class=\"data row14 col6\" >Daytime</td>\n",
       "      <td id=\"T_b1092_row14_col7\" class=\"data row14 col7\" >18,411</td>\n",
       "      <td id=\"T_b1092_row14_col8\" class=\"data row14 col8\" >41%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row15\" class=\"row_heading level0 row15\" >state</th>\n",
       "      <td id=\"T_b1092_row15_col0\" class=\"data row15 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row15_col1\" class=\"data row15 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row15_col2\" class=\"data row15 col2\" >51</td>\n",
       "      <td id=\"T_b1092_row15_col3\" class=\"data row15 col3\" >California</td>\n",
       "      <td id=\"T_b1092_row15_col4\" class=\"data row15 col4\" >4,724</td>\n",
       "      <td id=\"T_b1092_row15_col5\" class=\"data row15 col5\" >10%</td>\n",
       "      <td id=\"T_b1092_row15_col6\" class=\"data row15 col6\" >Texas</td>\n",
       "      <td id=\"T_b1092_row15_col7\" class=\"data row15 col7\" >4,176</td>\n",
       "      <td id=\"T_b1092_row15_col8\" class=\"data row15 col8\" >9%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row16\" class=\"row_heading level0 row16\" >a_region</th>\n",
       "      <td id=\"T_b1092_row16_col0\" class=\"data row16 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row16_col1\" class=\"data row16 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row16_col2\" class=\"data row16 col2\" >10</td>\n",
       "      <td id=\"T_b1092_row16_col3\" class=\"data row16 col3\" >Alabama, Florida, Georgia, South Carolina, Tennessee</td>\n",
       "      <td id=\"T_b1092_row16_col4\" class=\"data row16 col4\" >9,212</td>\n",
       "      <td id=\"T_b1092_row16_col5\" class=\"data row16 col5\" >20%</td>\n",
       "      <td id=\"T_b1092_row16_col6\" class=\"data row16 col6\" >Louisiana, Mississippi, New Mexico, Oklahoma, Texas</td>\n",
       "      <td id=\"T_b1092_row16_col7\" class=\"data row16 col7\" >7,230</td>\n",
       "      <td id=\"T_b1092_row16_col8\" class=\"data row16 col8\" >16%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row17\" class=\"row_heading level0 row17\" >a_ru</th>\n",
       "      <td id=\"T_b1092_row17_col0\" class=\"data row17 col0\" >45,086</td>\n",
       "      <td id=\"T_b1092_row17_col1\" class=\"data row17 col1\" >0.4%</td>\n",
       "      <td id=\"T_b1092_row17_col2\" class=\"data row17 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row17_col3\" class=\"data row17 col3\" >Urban</td>\n",
       "      <td id=\"T_b1092_row17_col4\" class=\"data row17 col4\" >23,751</td>\n",
       "      <td id=\"T_b1092_row17_col5\" class=\"data row17 col5\" >52%</td>\n",
       "      <td id=\"T_b1092_row17_col6\" class=\"data row17 col6\" >Rural</td>\n",
       "      <td id=\"T_b1092_row17_col7\" class=\"data row17 col7\" >21,335</td>\n",
       "      <td id=\"T_b1092_row17_col8\" class=\"data row17 col8\" >47%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row18\" class=\"row_heading level0 row18\" >a_inter</th>\n",
       "      <td id=\"T_b1092_row18_col0\" class=\"data row18 col0\" >45,042</td>\n",
       "      <td id=\"T_b1092_row18_col1\" class=\"data row18 col1\" >0.5%</td>\n",
       "      <td id=\"T_b1092_row18_col2\" class=\"data row18 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row18_col3\" class=\"data row18 col3\" >Non-Interstate</td>\n",
       "      <td id=\"T_b1092_row18_col4\" class=\"data row18 col4\" >39,345</td>\n",
       "      <td id=\"T_b1092_row18_col5\" class=\"data row18 col5\" >87%</td>\n",
       "      <td id=\"T_b1092_row18_col6\" class=\"data row18 col6\" >Interstate</td>\n",
       "      <td id=\"T_b1092_row18_col7\" class=\"data row18 col7\" >5,697</td>\n",
       "      <td id=\"T_b1092_row18_col8\" class=\"data row18 col8\" >13%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row19\" class=\"row_heading level0 row19\" >a_intsec</th>\n",
       "      <td id=\"T_b1092_row19_col0\" class=\"data row19 col0\" >45,216</td>\n",
       "      <td id=\"T_b1092_row19_col1\" class=\"data row19 col1\" >0.1%</td>\n",
       "      <td id=\"T_b1092_row19_col2\" class=\"data row19 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row19_col3\" class=\"data row19 col3\" >Non-Intersection</td>\n",
       "      <td id=\"T_b1092_row19_col4\" class=\"data row19 col4\" >38,839</td>\n",
       "      <td id=\"T_b1092_row19_col5\" class=\"data row19 col5\" >86%</td>\n",
       "      <td id=\"T_b1092_row19_col6\" class=\"data row19 col6\" >Intersection</td>\n",
       "      <td id=\"T_b1092_row19_col7\" class=\"data row19 col7\" >6,377</td>\n",
       "      <td id=\"T_b1092_row19_col8\" class=\"data row19 col8\" >14%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row20\" class=\"row_heading level0 row20\" >a_roadfc</th>\n",
       "      <td id=\"T_b1092_row20_col0\" class=\"data row20 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row20_col1\" class=\"data row20 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row20_col2\" class=\"data row20 col2\" >7</td>\n",
       "      <td id=\"T_b1092_row20_col3\" class=\"data row20 col3\" >Principal Arterial – Other</td>\n",
       "      <td id=\"T_b1092_row20_col4\" class=\"data row20 col4\" >11,019</td>\n",
       "      <td id=\"T_b1092_row20_col5\" class=\"data row20 col5\" >24%</td>\n",
       "      <td id=\"T_b1092_row20_col6\" class=\"data row20 col6\" >Major Collector</td>\n",
       "      <td id=\"T_b1092_row20_col7\" class=\"data row20 col7\" >9,614</td>\n",
       "      <td id=\"T_b1092_row20_col8\" class=\"data row20 col8\" >21%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row21\" class=\"row_heading level0 row21\" >a_junc</th>\n",
       "      <td id=\"T_b1092_row21_col0\" class=\"data row21 col0\" >45,216</td>\n",
       "      <td id=\"T_b1092_row21_col1\" class=\"data row21 col1\" >0.1%</td>\n",
       "      <td id=\"T_b1092_row21_col2\" class=\"data row21 col2\" >3</td>\n",
       "      <td id=\"T_b1092_row21_col3\" class=\"data row21 col3\" >Non-Junction</td>\n",
       "      <td id=\"T_b1092_row21_col4\" class=\"data row21 col4\" >36,058</td>\n",
       "      <td id=\"T_b1092_row21_col5\" class=\"data row21 col5\" >80%</td>\n",
       "      <td id=\"T_b1092_row21_col6\" class=\"data row21 col6\" >Junction</td>\n",
       "      <td id=\"T_b1092_row21_col7\" class=\"data row21 col7\" >6,377</td>\n",
       "      <td id=\"T_b1092_row21_col8\" class=\"data row21 col8\" >14%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row22\" class=\"row_heading level0 row22\" >a_relrd</th>\n",
       "      <td id=\"T_b1092_row22_col0\" class=\"data row22 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row22_col1\" class=\"data row22 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row22_col2\" class=\"data row22 col2\" >5</td>\n",
       "      <td id=\"T_b1092_row22_col3\" class=\"data row22 col3\" >Off Roadway/Other</td>\n",
       "      <td id=\"T_b1092_row22_col4\" class=\"data row22 col4\" >26,052</td>\n",
       "      <td id=\"T_b1092_row22_col5\" class=\"data row22 col5\" >58%</td>\n",
       "      <td id=\"T_b1092_row22_col6\" class=\"data row22 col6\" >On Roadway</td>\n",
       "      <td id=\"T_b1092_row22_col7\" class=\"data row22 col7\" >15,597</td>\n",
       "      <td id=\"T_b1092_row22_col8\" class=\"data row22 col8\" >34%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row23\" class=\"row_heading level0 row23\" >age</th>\n",
       "      <td id=\"T_b1092_row23_col0\" class=\"data row23 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row23_col1\" class=\"data row23 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row23_col2\" class=\"data row23 col2\" >85</td>\n",
       "      <td id=\"T_b1092_row23_col3\" class=\"data row23 col3\" >22</td>\n",
       "      <td id=\"T_b1092_row23_col4\" class=\"data row23 col4\" >1,339</td>\n",
       "      <td id=\"T_b1092_row23_col5\" class=\"data row23 col5\" >3%</td>\n",
       "      <td id=\"T_b1092_row23_col6\" class=\"data row23 col6\" >21</td>\n",
       "      <td id=\"T_b1092_row23_col7\" class=\"data row23 col7\" >1,324</td>\n",
       "      <td id=\"T_b1092_row23_col8\" class=\"data row23 col8\" >3%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row24\" class=\"row_heading level0 row24\" >permvit</th>\n",
       "      <td id=\"T_b1092_row24_col0\" class=\"data row24 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row24_col1\" class=\"data row24 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row24_col2\" class=\"data row24 col2\" >26</td>\n",
       "      <td id=\"T_b1092_row24_col3\" class=\"data row24 col3\" >1</td>\n",
       "      <td id=\"T_b1092_row24_col4\" class=\"data row24 col4\" >32,590</td>\n",
       "      <td id=\"T_b1092_row24_col5\" class=\"data row24 col5\" >72%</td>\n",
       "      <td id=\"T_b1092_row24_col6\" class=\"data row24 col6\" >2</td>\n",
       "      <td id=\"T_b1092_row24_col7\" class=\"data row24 col7\" >8,157</td>\n",
       "      <td id=\"T_b1092_row24_col8\" class=\"data row24 col8\" >18%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row25\" class=\"row_heading level0 row25\" >pernotmvit</th>\n",
       "      <td id=\"T_b1092_row25_col0\" class=\"data row25 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row25_col1\" class=\"data row25 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row25_col2\" class=\"data row25 col2\" >13</td>\n",
       "      <td id=\"T_b1092_row25_col3\" class=\"data row25 col3\" >0</td>\n",
       "      <td id=\"T_b1092_row25_col4\" class=\"data row25 col4\" >31,213</td>\n",
       "      <td id=\"T_b1092_row25_col5\" class=\"data row25 col5\" >69%</td>\n",
       "      <td id=\"T_b1092_row25_col6\" class=\"data row25 col6\" >1</td>\n",
       "      <td id=\"T_b1092_row25_col7\" class=\"data row25 col7\" >13,224</td>\n",
       "      <td id=\"T_b1092_row25_col8\" class=\"data row25 col8\" >29%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row26\" class=\"row_heading level0 row26\" >a_ped</th>\n",
       "      <td id=\"T_b1092_row26_col0\" class=\"data row26 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row26_col1\" class=\"data row26 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row26_col2\" class=\"data row26 col2\" >2</td>\n",
       "      <td id=\"T_b1092_row26_col3\" class=\"data row26 col3\" >no</td>\n",
       "      <td id=\"T_b1092_row26_col4\" class=\"data row26 col4\" >33,722</td>\n",
       "      <td id=\"T_b1092_row26_col5\" class=\"data row26 col5\" >74%</td>\n",
       "      <td id=\"T_b1092_row26_col6\" class=\"data row26 col6\" >yes</td>\n",
       "      <td id=\"T_b1092_row26_col7\" class=\"data row26 col7\" >11,564</td>\n",
       "      <td id=\"T_b1092_row26_col8\" class=\"data row26 col8\" >26%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row27\" class=\"row_heading level0 row27\" >mod_year</th>\n",
       "      <td id=\"T_b1092_row27_col0\" class=\"data row27 col0\" >45,009</td>\n",
       "      <td id=\"T_b1092_row27_col1\" class=\"data row27 col1\" >0.6%</td>\n",
       "      <td id=\"T_b1092_row27_col2\" class=\"data row27 col2\" >77</td>\n",
       "      <td id=\"T_b1092_row27_col3\" class=\"data row27 col3\" >2005.000000</td>\n",
       "      <td id=\"T_b1092_row27_col4\" class=\"data row27 col4\" >2,852</td>\n",
       "      <td id=\"T_b1092_row27_col5\" class=\"data row27 col5\" >6%</td>\n",
       "      <td id=\"T_b1092_row27_col6\" class=\"data row27 col6\" >2004.000000</td>\n",
       "      <td id=\"T_b1092_row27_col7\" class=\"data row27 col7\" >2,805</td>\n",
       "      <td id=\"T_b1092_row27_col8\" class=\"data row27 col8\" >6%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row28\" class=\"row_heading level0 row28\" >a_body</th>\n",
       "      <td id=\"T_b1092_row28_col0\" class=\"data row28 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row28_col1\" class=\"data row28 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row28_col2\" class=\"data row28 col2\" >9</td>\n",
       "      <td id=\"T_b1092_row28_col3\" class=\"data row28 col3\" >Automobiles</td>\n",
       "      <td id=\"T_b1092_row28_col4\" class=\"data row28 col4\" >18,346</td>\n",
       "      <td id=\"T_b1092_row28_col5\" class=\"data row28 col5\" >41%</td>\n",
       "      <td id=\"T_b1092_row28_col6\" class=\"data row28 col6\" >Utility Vehicles</td>\n",
       "      <td id=\"T_b1092_row28_col7\" class=\"data row28 col7\" >8,506</td>\n",
       "      <td id=\"T_b1092_row28_col8\" class=\"data row28 col8\" >19%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row29\" class=\"row_heading level0 row29\" >owner</th>\n",
       "      <td id=\"T_b1092_row29_col0\" class=\"data row29 col0\" >45,028</td>\n",
       "      <td id=\"T_b1092_row29_col1\" class=\"data row29 col1\" >0.6%</td>\n",
       "      <td id=\"T_b1092_row29_col2\" class=\"data row29 col2\" >6</td>\n",
       "      <td id=\"T_b1092_row29_col3\" class=\"data row29 col3\" >Driver (in this crash) Was Registered Owner</td>\n",
       "      <td id=\"T_b1092_row29_col4\" class=\"data row29 col4\" >25,545</td>\n",
       "      <td id=\"T_b1092_row29_col5\" class=\"data row29 col5\" >56%</td>\n",
       "      <td id=\"T_b1092_row29_col6\" class=\"data row29 col6\" >Driver (in this crash) Not Registered Owner (other private owner listed)</td>\n",
       "      <td id=\"T_b1092_row29_col7\" class=\"data row29 col7\" >14,642</td>\n",
       "      <td id=\"T_b1092_row29_col8\" class=\"data row29 col8\" >32%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row30\" class=\"row_heading level0 row30\" >deaths</th>\n",
       "      <td id=\"T_b1092_row30_col0\" class=\"data row30 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row30_col1\" class=\"data row30 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row30_col2\" class=\"data row30 col2\" >9</td>\n",
       "      <td id=\"T_b1092_row30_col3\" class=\"data row30 col3\" >1</td>\n",
       "      <td id=\"T_b1092_row30_col4\" class=\"data row30 col4\" >29,921</td>\n",
       "      <td id=\"T_b1092_row30_col5\" class=\"data row30 col5\" >66%</td>\n",
       "      <td id=\"T_b1092_row30_col6\" class=\"data row30 col6\" >0</td>\n",
       "      <td id=\"T_b1092_row30_col7\" class=\"data row30 col7\" >13,707</td>\n",
       "      <td id=\"T_b1092_row30_col8\" class=\"data row30 col8\" >30%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row31\" class=\"row_heading level0 row31\" >numoccs</th>\n",
       "      <td id=\"T_b1092_row31_col0\" class=\"data row31 col0\" >44,855</td>\n",
       "      <td id=\"T_b1092_row31_col1\" class=\"data row31 col1\" >0.9%</td>\n",
       "      <td id=\"T_b1092_row31_col2\" class=\"data row31 col2\" >31</td>\n",
       "      <td id=\"T_b1092_row31_col3\" class=\"data row31 col3\" >1.000000</td>\n",
       "      <td id=\"T_b1092_row31_col4\" class=\"data row31 col4\" >32,190</td>\n",
       "      <td id=\"T_b1092_row31_col5\" class=\"data row31 col5\" >71%</td>\n",
       "      <td id=\"T_b1092_row31_col6\" class=\"data row31 col6\" >2.000000</td>\n",
       "      <td id=\"T_b1092_row31_col7\" class=\"data row31 col7\" >8,122</td>\n",
       "      <td id=\"T_b1092_row31_col8\" class=\"data row31 col8\" >18%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row32\" class=\"row_heading level0 row32\" >impact1</th>\n",
       "      <td id=\"T_b1092_row32_col0\" class=\"data row32 col0\" >42,060</td>\n",
       "      <td id=\"T_b1092_row32_col1\" class=\"data row32 col1\" >7.1%</td>\n",
       "      <td id=\"T_b1092_row32_col2\" class=\"data row32 col2\" >24</td>\n",
       "      <td id=\"T_b1092_row32_col3\" class=\"data row32 col3\" >Clockpoint 12</td>\n",
       "      <td id=\"T_b1092_row32_col4\" class=\"data row32 col4\" >24,197</td>\n",
       "      <td id=\"T_b1092_row32_col5\" class=\"data row32 col5\" >53%</td>\n",
       "      <td id=\"T_b1092_row32_col6\" class=\"data row32 col6\" >Non-Collision</td>\n",
       "      <td id=\"T_b1092_row32_col7\" class=\"data row32 col7\" >6,922</td>\n",
       "      <td id=\"T_b1092_row32_col8\" class=\"data row32 col8\" >15%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row33\" class=\"row_heading level0 row33\" >deformed</th>\n",
       "      <td id=\"T_b1092_row33_col0\" class=\"data row33 col0\" >41,981</td>\n",
       "      <td id=\"T_b1092_row33_col1\" class=\"data row33 col1\" >7.3%</td>\n",
       "      <td id=\"T_b1092_row33_col2\" class=\"data row33 col2\" >4</td>\n",
       "      <td id=\"T_b1092_row33_col3\" class=\"data row33 col3\" >Disabling damage</td>\n",
       "      <td id=\"T_b1092_row33_col4\" class=\"data row33 col4\" >31,559</td>\n",
       "      <td id=\"T_b1092_row33_col5\" class=\"data row33 col5\" >70%</td>\n",
       "      <td id=\"T_b1092_row33_col6\" class=\"data row33 col6\" >Functional damage</td>\n",
       "      <td id=\"T_b1092_row33_col7\" class=\"data row33 col7\" >5,022</td>\n",
       "      <td id=\"T_b1092_row33_col8\" class=\"data row33 col8\" >11%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row34\" class=\"row_heading level0 row34\" >ve_forms</th>\n",
       "      <td id=\"T_b1092_row34_col0\" class=\"data row34 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row34_col1\" class=\"data row34 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row34_col2\" class=\"data row34 col2\" >1</td>\n",
       "      <td id=\"T_b1092_row34_col3\" class=\"data row34 col3\" >1</td>\n",
       "      <td id=\"T_b1092_row34_col4\" class=\"data row34 col4\" >45,286</td>\n",
       "      <td id=\"T_b1092_row34_col5\" class=\"data row34 col5\" >100%</td>\n",
       "      <td id=\"T_b1092_row34_col6\" class=\"data row34 col6\" >None</td>\n",
       "      <td id=\"T_b1092_row34_col7\" class=\"data row34 col7\" >0</td>\n",
       "      <td id=\"T_b1092_row34_col8\" class=\"data row34 col8\" >0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row35\" class=\"row_heading level0 row35\" >ve_total</th>\n",
       "      <td id=\"T_b1092_row35_col0\" class=\"data row35 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row35_col1\" class=\"data row35 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row35_col2\" class=\"data row35 col2\" >13</td>\n",
       "      <td id=\"T_b1092_row35_col3\" class=\"data row35 col3\" >1</td>\n",
       "      <td id=\"T_b1092_row35_col4\" class=\"data row35 col4\" >43,652</td>\n",
       "      <td id=\"T_b1092_row35_col5\" class=\"data row35 col5\" >96%</td>\n",
       "      <td id=\"T_b1092_row35_col6\" class=\"data row35 col6\" >2</td>\n",
       "      <td id=\"T_b1092_row35_col7\" class=\"data row35 col7\" >1,265</td>\n",
       "      <td id=\"T_b1092_row35_col8\" class=\"data row35 col8\" >3%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row36\" class=\"row_heading level0 row36\" >weather</th>\n",
       "      <td id=\"T_b1092_row36_col0\" class=\"data row36 col0\" >42,419</td>\n",
       "      <td id=\"T_b1092_row36_col1\" class=\"data row36 col1\" >6.3%</td>\n",
       "      <td id=\"T_b1092_row36_col2\" class=\"data row36 col2\" >12</td>\n",
       "      <td id=\"T_b1092_row36_col3\" class=\"data row36 col3\" >Clear</td>\n",
       "      <td id=\"T_b1092_row36_col4\" class=\"data row36 col4\" >31,306</td>\n",
       "      <td id=\"T_b1092_row36_col5\" class=\"data row36 col5\" >69%</td>\n",
       "      <td id=\"T_b1092_row36_col6\" class=\"data row36 col6\" >Cloudy</td>\n",
       "      <td id=\"T_b1092_row36_col7\" class=\"data row36 col7\" >6,350</td>\n",
       "      <td id=\"T_b1092_row36_col8\" class=\"data row36 col8\" >14%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row37\" class=\"row_heading level0 row37\" >lgt_cond</th>\n",
       "      <td id=\"T_b1092_row37_col0\" class=\"data row37 col0\" >45,253</td>\n",
       "      <td id=\"T_b1092_row37_col1\" class=\"data row37 col1\" >0.1%</td>\n",
       "      <td id=\"T_b1092_row37_col2\" class=\"data row37 col2\" >8</td>\n",
       "      <td id=\"T_b1092_row37_col3\" class=\"data row37 col3\" >Daylight</td>\n",
       "      <td id=\"T_b1092_row37_col4\" class=\"data row37 col4\" >17,945</td>\n",
       "      <td id=\"T_b1092_row37_col5\" class=\"data row37 col5\" >40%</td>\n",
       "      <td id=\"T_b1092_row37_col6\" class=\"data row37 col6\" >Dark - not lighted</td>\n",
       "      <td id=\"T_b1092_row37_col7\" class=\"data row37 col7\" >15,059</td>\n",
       "      <td id=\"T_b1092_row37_col8\" class=\"data row37 col8\" >33%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_b1092_level0_row38\" class=\"row_heading level0 row38\" >driver_factor</th>\n",
       "      <td id=\"T_b1092_row38_col0\" class=\"data row38 col0\" >45,286</td>\n",
       "      <td id=\"T_b1092_row38_col1\" class=\"data row38 col1\" >0.0%</td>\n",
       "      <td id=\"T_b1092_row38_col2\" class=\"data row38 col2\" >3</td>\n",
       "      <td id=\"T_b1092_row38_col3\" class=\"data row38 col3\" >other</td>\n",
       "      <td id=\"T_b1092_row38_col4\" class=\"data row38 col4\" >25,887</td>\n",
       "      <td id=\"T_b1092_row38_col5\" class=\"data row38 col5\" >57%</td>\n",
       "      <td id=\"T_b1092_row38_col6\" class=\"data row38 col6\" >drunk_driver_involved</td>\n",
       "      <td id=\"T_b1092_row38_col7\" class=\"data row38 col7\" >11,863</td>\n",
       "      <td id=\"T_b1092_row38_col8\" class=\"data row38 col8\" >26%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x105ba11b0>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# View Data Quality Report\n",
    "DQR = Data_Quality_Report(df)\n",
    "DQR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "</style>\n",
       "<table id=\"T_f77f6\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_f77f6_level0_col0\" class=\"col_heading level0 col0\" >Count</th>\n",
       "      <th id=\"T_f77f6_level0_col1\" class=\"col_heading level0 col1\" >% Miss.</th>\n",
       "      <th id=\"T_f77f6_level0_col2\" class=\"col_heading level0 col2\" >Card.</th>\n",
       "      <th id=\"T_f77f6_level0_col3\" class=\"col_heading level0 col3\" >Mode</th>\n",
       "      <th id=\"T_f77f6_level0_col4\" class=\"col_heading level0 col4\" >Mode Freq.</th>\n",
       "      <th id=\"T_f77f6_level0_col5\" class=\"col_heading level0 col5\" >Mode %</th>\n",
       "      <th id=\"T_f77f6_level0_col6\" class=\"col_heading level0 col6\" >2nd Mode</th>\n",
       "      <th id=\"T_f77f6_level0_col7\" class=\"col_heading level0 col7\" >2nd Mode Freq.</th>\n",
       "      <th id=\"T_f77f6_level0_col8\" class=\"col_heading level0 col8\" >2nd Mode %</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row0\" class=\"row_heading level0 row0\" >u_id</th>\n",
       "      <td id=\"T_f77f6_row0_col0\" class=\"data row0 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row0_col1\" class=\"data row0 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row0_col2\" class=\"data row0 col2\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row0_col3\" class=\"data row0 col3\" >32083</td>\n",
       "      <td id=\"T_f77f6_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "      <td id=\"T_f77f6_row0_col5\" class=\"data row0 col5\" >0%</td>\n",
       "      <td id=\"T_f77f6_row0_col6\" class=\"data row0 col6\" >15545</td>\n",
       "      <td id=\"T_f77f6_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "      <td id=\"T_f77f6_row0_col8\" class=\"data row0 col8\" >0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row1\" class=\"row_heading level0 row1\" >fatals</th>\n",
       "      <td id=\"T_f77f6_row1_col0\" class=\"data row1 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row1_col1\" class=\"data row1 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row1_col2\" class=\"data row1 col2\" >8</td>\n",
       "      <td id=\"T_f77f6_row1_col3\" class=\"data row1 col3\" >1</td>\n",
       "      <td id=\"T_f77f6_row1_col4\" class=\"data row1 col4\" >34,034</td>\n",
       "      <td id=\"T_f77f6_row1_col5\" class=\"data row1 col5\" >96%</td>\n",
       "      <td id=\"T_f77f6_row1_col6\" class=\"data row1 col6\" >2</td>\n",
       "      <td id=\"T_f77f6_row1_col7\" class=\"data row1 col7\" >1,283</td>\n",
       "      <td id=\"T_f77f6_row1_col8\" class=\"data row1 col8\" >4%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row2\" class=\"row_heading level0 row2\" >a_ct</th>\n",
       "      <td id=\"T_f77f6_row2_col0\" class=\"data row2 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row2_col1\" class=\"data row2 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row2_col2\" class=\"data row2 col2\" >1</td>\n",
       "      <td id=\"T_f77f6_row2_col3\" class=\"data row2 col3\" >Single-Vehicle Crash</td>\n",
       "      <td id=\"T_f77f6_row2_col4\" class=\"data row2 col4\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row2_col5\" class=\"data row2 col5\" >100%</td>\n",
       "      <td id=\"T_f77f6_row2_col6\" class=\"data row2 col6\" >None</td>\n",
       "      <td id=\"T_f77f6_row2_col7\" class=\"data row2 col7\" >0</td>\n",
       "      <td id=\"T_f77f6_row2_col8\" class=\"data row2 col8\" >0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row3\" class=\"row_heading level0 row3\" >a_ped_f</th>\n",
       "      <td id=\"T_f77f6_row3_col0\" class=\"data row3 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row3_col1\" class=\"data row3 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row3_col2\" class=\"data row3 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row3_col3\" class=\"data row3 col3\" >Other Crash</td>\n",
       "      <td id=\"T_f77f6_row3_col4\" class=\"data row3 col4\" >26,539</td>\n",
       "      <td id=\"T_f77f6_row3_col5\" class=\"data row3 col5\" >75%</td>\n",
       "      <td id=\"T_f77f6_row3_col6\" class=\"data row3 col6\" >Pedestrian Fatality Involved Crash</td>\n",
       "      <td id=\"T_f77f6_row3_col7\" class=\"data row3 col7\" >8,988</td>\n",
       "      <td id=\"T_f77f6_row3_col8\" class=\"data row3 col8\" >25%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row4\" class=\"row_heading level0 row4\" >a_pedal_f</th>\n",
       "      <td id=\"T_f77f6_row4_col0\" class=\"data row4 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row4_col1\" class=\"data row4 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row4_col2\" class=\"data row4 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row4_col3\" class=\"data row4 col3\" >Other Crash</td>\n",
       "      <td id=\"T_f77f6_row4_col4\" class=\"data row4 col4\" >34,167</td>\n",
       "      <td id=\"T_f77f6_row4_col5\" class=\"data row4 col5\" >96%</td>\n",
       "      <td id=\"T_f77f6_row4_col6\" class=\"data row4 col6\" >Pedalcyclist Fatality Involved Crash</td>\n",
       "      <td id=\"T_f77f6_row4_col7\" class=\"data row4 col7\" >1,360</td>\n",
       "      <td id=\"T_f77f6_row4_col8\" class=\"data row4 col8\" >4%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row5\" class=\"row_heading level0 row5\" >a_roll</th>\n",
       "      <td id=\"T_f77f6_row5_col0\" class=\"data row5 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row5_col1\" class=\"data row5 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row5_col2\" class=\"data row5 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row5_col3\" class=\"data row5 col3\" >Other Crash</td>\n",
       "      <td id=\"T_f77f6_row5_col4\" class=\"data row5 col4\" >24,659</td>\n",
       "      <td id=\"T_f77f6_row5_col5\" class=\"data row5 col5\" >69%</td>\n",
       "      <td id=\"T_f77f6_row5_col6\" class=\"data row5 col6\" >Rollover Involved Crash</td>\n",
       "      <td id=\"T_f77f6_row5_col7\" class=\"data row5 col7\" >10,868</td>\n",
       "      <td id=\"T_f77f6_row5_col8\" class=\"data row5 col8\" >31%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row6\" class=\"row_heading level0 row6\" >a_hr</th>\n",
       "      <td id=\"T_f77f6_row6_col0\" class=\"data row6 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row6_col1\" class=\"data row6 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row6_col2\" class=\"data row6 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row6_col3\" class=\"data row6 col3\" >No - Hit and Run</td>\n",
       "      <td id=\"T_f77f6_row6_col4\" class=\"data row6 col4\" >34,684</td>\n",
       "      <td id=\"T_f77f6_row6_col5\" class=\"data row6 col5\" >98%</td>\n",
       "      <td id=\"T_f77f6_row6_col6\" class=\"data row6 col6\" >Yes - Hit and Run</td>\n",
       "      <td id=\"T_f77f6_row6_col7\" class=\"data row6 col7\" >843</td>\n",
       "      <td id=\"T_f77f6_row6_col8\" class=\"data row6 col8\" >2%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row7\" class=\"row_heading level0 row7\" >a_polpur</th>\n",
       "      <td id=\"T_f77f6_row7_col0\" class=\"data row7 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row7_col1\" class=\"data row7 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row7_col2\" class=\"data row7 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row7_col3\" class=\"data row7 col3\" >Other Crash</td>\n",
       "      <td id=\"T_f77f6_row7_col4\" class=\"data row7 col4\" >35,129</td>\n",
       "      <td id=\"T_f77f6_row7_col5\" class=\"data row7 col5\" >99%</td>\n",
       "      <td id=\"T_f77f6_row7_col6\" class=\"data row7 col6\" >Police Pursuit Involved Crash</td>\n",
       "      <td id=\"T_f77f6_row7_col7\" class=\"data row7 col7\" >398</td>\n",
       "      <td id=\"T_f77f6_row7_col8\" class=\"data row7 col8\" >1%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row8\" class=\"row_heading level0 row8\" >month</th>\n",
       "      <td id=\"T_f77f6_row8_col0\" class=\"data row8 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row8_col1\" class=\"data row8 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row8_col2\" class=\"data row8 col2\" >12</td>\n",
       "      <td id=\"T_f77f6_row8_col3\" class=\"data row8 col3\" >10</td>\n",
       "      <td id=\"T_f77f6_row8_col4\" class=\"data row8 col4\" >3,259</td>\n",
       "      <td id=\"T_f77f6_row8_col5\" class=\"data row8 col5\" >9%</td>\n",
       "      <td id=\"T_f77f6_row8_col6\" class=\"data row8 col6\" >7</td>\n",
       "      <td id=\"T_f77f6_row8_col7\" class=\"data row8 col7\" >3,240</td>\n",
       "      <td id=\"T_f77f6_row8_col8\" class=\"data row8 col8\" >9%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row9\" class=\"row_heading level0 row9\" >day</th>\n",
       "      <td id=\"T_f77f6_row9_col0\" class=\"data row9 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row9_col1\" class=\"data row9 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row9_col2\" class=\"data row9 col2\" >31</td>\n",
       "      <td id=\"T_f77f6_row9_col3\" class=\"data row9 col3\" >1</td>\n",
       "      <td id=\"T_f77f6_row9_col4\" class=\"data row9 col4\" >1,259</td>\n",
       "      <td id=\"T_f77f6_row9_col5\" class=\"data row9 col5\" >4%</td>\n",
       "      <td id=\"T_f77f6_row9_col6\" class=\"data row9 col6\" >4</td>\n",
       "      <td id=\"T_f77f6_row9_col7\" class=\"data row9 col7\" >1,249</td>\n",
       "      <td id=\"T_f77f6_row9_col8\" class=\"data row9 col8\" >4%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row10\" class=\"row_heading level0 row10\" >day_week</th>\n",
       "      <td id=\"T_f77f6_row10_col0\" class=\"data row10 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row10_col1\" class=\"data row10 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row10_col2\" class=\"data row10 col2\" >7</td>\n",
       "      <td id=\"T_f77f6_row10_col3\" class=\"data row10 col3\" >sat</td>\n",
       "      <td id=\"T_f77f6_row10_col4\" class=\"data row10 col4\" >6,467</td>\n",
       "      <td id=\"T_f77f6_row10_col5\" class=\"data row10 col5\" >18%</td>\n",
       "      <td id=\"T_f77f6_row10_col6\" class=\"data row10 col6\" >sun</td>\n",
       "      <td id=\"T_f77f6_row10_col7\" class=\"data row10 col7\" >5,994</td>\n",
       "      <td id=\"T_f77f6_row10_col8\" class=\"data row10 col8\" >17%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row11\" class=\"row_heading level0 row11\" >hour</th>\n",
       "      <td id=\"T_f77f6_row11_col0\" class=\"data row11 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row11_col1\" class=\"data row11 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row11_col2\" class=\"data row11 col2\" >24</td>\n",
       "      <td id=\"T_f77f6_row11_col3\" class=\"data row11 col3\" >20.000000</td>\n",
       "      <td id=\"T_f77f6_row11_col4\" class=\"data row11 col4\" >2,221</td>\n",
       "      <td id=\"T_f77f6_row11_col5\" class=\"data row11 col5\" >6%</td>\n",
       "      <td id=\"T_f77f6_row11_col6\" class=\"data row11 col6\" >21.000000</td>\n",
       "      <td id=\"T_f77f6_row11_col7\" class=\"data row11 col7\" >2,169</td>\n",
       "      <td id=\"T_f77f6_row11_col8\" class=\"data row11 col8\" >6%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row12\" class=\"row_heading level0 row12\" >minute</th>\n",
       "      <td id=\"T_f77f6_row12_col0\" class=\"data row12 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row12_col1\" class=\"data row12 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row12_col2\" class=\"data row12 col2\" >60</td>\n",
       "      <td id=\"T_f77f6_row12_col3\" class=\"data row12 col3\" >0.000000</td>\n",
       "      <td id=\"T_f77f6_row12_col4\" class=\"data row12 col4\" >2,035</td>\n",
       "      <td id=\"T_f77f6_row12_col5\" class=\"data row12 col5\" >6%</td>\n",
       "      <td id=\"T_f77f6_row12_col6\" class=\"data row12 col6\" >30.000000</td>\n",
       "      <td id=\"T_f77f6_row12_col7\" class=\"data row12 col7\" >1,784</td>\n",
       "      <td id=\"T_f77f6_row12_col8\" class=\"data row12 col8\" >5%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row13\" class=\"row_heading level0 row13\" >a_dow_type</th>\n",
       "      <td id=\"T_f77f6_row13_col0\" class=\"data row13 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row13_col1\" class=\"data row13 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row13_col2\" class=\"data row13 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row13_col3\" class=\"data row13 col3\" >Weekday</td>\n",
       "      <td id=\"T_f77f6_row13_col4\" class=\"data row13 col4\" >23,066</td>\n",
       "      <td id=\"T_f77f6_row13_col5\" class=\"data row13 col5\" >65%</td>\n",
       "      <td id=\"T_f77f6_row13_col6\" class=\"data row13 col6\" >Weekend</td>\n",
       "      <td id=\"T_f77f6_row13_col7\" class=\"data row13 col7\" >12,461</td>\n",
       "      <td id=\"T_f77f6_row13_col8\" class=\"data row13 col8\" >35%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row14\" class=\"row_heading level0 row14\" >a_tod_type</th>\n",
       "      <td id=\"T_f77f6_row14_col0\" class=\"data row14 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row14_col1\" class=\"data row14 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row14_col2\" class=\"data row14 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row14_col3\" class=\"data row14 col3\" >Nighttime</td>\n",
       "      <td id=\"T_f77f6_row14_col4\" class=\"data row14 col4\" >20,981</td>\n",
       "      <td id=\"T_f77f6_row14_col5\" class=\"data row14 col5\" >59%</td>\n",
       "      <td id=\"T_f77f6_row14_col6\" class=\"data row14 col6\" >Daytime</td>\n",
       "      <td id=\"T_f77f6_row14_col7\" class=\"data row14 col7\" >14,546</td>\n",
       "      <td id=\"T_f77f6_row14_col8\" class=\"data row14 col8\" >41%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row15\" class=\"row_heading level0 row15\" >state</th>\n",
       "      <td id=\"T_f77f6_row15_col0\" class=\"data row15 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row15_col1\" class=\"data row15 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row15_col2\" class=\"data row15 col2\" >51</td>\n",
       "      <td id=\"T_f77f6_row15_col3\" class=\"data row15 col3\" >California</td>\n",
       "      <td id=\"T_f77f6_row15_col4\" class=\"data row15 col4\" >3,492</td>\n",
       "      <td id=\"T_f77f6_row15_col5\" class=\"data row15 col5\" >10%</td>\n",
       "      <td id=\"T_f77f6_row15_col6\" class=\"data row15 col6\" >Florida</td>\n",
       "      <td id=\"T_f77f6_row15_col7\" class=\"data row15 col7\" >3,341</td>\n",
       "      <td id=\"T_f77f6_row15_col8\" class=\"data row15 col8\" >9%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row16\" class=\"row_heading level0 row16\" >a_region</th>\n",
       "      <td id=\"T_f77f6_row16_col0\" class=\"data row16 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row16_col1\" class=\"data row16 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row16_col2\" class=\"data row16 col2\" >10</td>\n",
       "      <td id=\"T_f77f6_row16_col3\" class=\"data row16 col3\" >Alabama, Florida, Georgia, South Carolina, Tennessee</td>\n",
       "      <td id=\"T_f77f6_row16_col4\" class=\"data row16 col4\" >8,697</td>\n",
       "      <td id=\"T_f77f6_row16_col5\" class=\"data row16 col5\" >24%</td>\n",
       "      <td id=\"T_f77f6_row16_col6\" class=\"data row16 col6\" >Louisiana, Mississippi, New Mexico, Oklahoma, Texas</td>\n",
       "      <td id=\"T_f77f6_row16_col7\" class=\"data row16 col7\" >6,077</td>\n",
       "      <td id=\"T_f77f6_row16_col8\" class=\"data row16 col8\" >17%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row17\" class=\"row_heading level0 row17\" >a_ru</th>\n",
       "      <td id=\"T_f77f6_row17_col0\" class=\"data row17 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row17_col1\" class=\"data row17 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row17_col2\" class=\"data row17 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row17_col3\" class=\"data row17 col3\" >Urban</td>\n",
       "      <td id=\"T_f77f6_row17_col4\" class=\"data row17 col4\" >18,336</td>\n",
       "      <td id=\"T_f77f6_row17_col5\" class=\"data row17 col5\" >52%</td>\n",
       "      <td id=\"T_f77f6_row17_col6\" class=\"data row17 col6\" >Rural</td>\n",
       "      <td id=\"T_f77f6_row17_col7\" class=\"data row17 col7\" >17,191</td>\n",
       "      <td id=\"T_f77f6_row17_col8\" class=\"data row17 col8\" >48%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row18\" class=\"row_heading level0 row18\" >a_inter</th>\n",
       "      <td id=\"T_f77f6_row18_col0\" class=\"data row18 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row18_col1\" class=\"data row18 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row18_col2\" class=\"data row18 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row18_col3\" class=\"data row18 col3\" >Non-Interstate</td>\n",
       "      <td id=\"T_f77f6_row18_col4\" class=\"data row18 col4\" >30,850</td>\n",
       "      <td id=\"T_f77f6_row18_col5\" class=\"data row18 col5\" >87%</td>\n",
       "      <td id=\"T_f77f6_row18_col6\" class=\"data row18 col6\" >Interstate</td>\n",
       "      <td id=\"T_f77f6_row18_col7\" class=\"data row18 col7\" >4,677</td>\n",
       "      <td id=\"T_f77f6_row18_col8\" class=\"data row18 col8\" >13%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row19\" class=\"row_heading level0 row19\" >a_intsec</th>\n",
       "      <td id=\"T_f77f6_row19_col0\" class=\"data row19 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row19_col1\" class=\"data row19 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row19_col2\" class=\"data row19 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row19_col3\" class=\"data row19 col3\" >Non-Intersection</td>\n",
       "      <td id=\"T_f77f6_row19_col4\" class=\"data row19 col4\" >30,830</td>\n",
       "      <td id=\"T_f77f6_row19_col5\" class=\"data row19 col5\" >87%</td>\n",
       "      <td id=\"T_f77f6_row19_col6\" class=\"data row19 col6\" >Intersection</td>\n",
       "      <td id=\"T_f77f6_row19_col7\" class=\"data row19 col7\" >4,697</td>\n",
       "      <td id=\"T_f77f6_row19_col8\" class=\"data row19 col8\" >13%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row20\" class=\"row_heading level0 row20\" >a_roadfc</th>\n",
       "      <td id=\"T_f77f6_row20_col0\" class=\"data row20 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row20_col1\" class=\"data row20 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row20_col2\" class=\"data row20 col2\" >6</td>\n",
       "      <td id=\"T_f77f6_row20_col3\" class=\"data row20 col3\" >Principal Arterial – Other</td>\n",
       "      <td id=\"T_f77f6_row20_col4\" class=\"data row20 col4\" >8,664</td>\n",
       "      <td id=\"T_f77f6_row20_col5\" class=\"data row20 col5\" >24%</td>\n",
       "      <td id=\"T_f77f6_row20_col6\" class=\"data row20 col6\" >Major Collector</td>\n",
       "      <td id=\"T_f77f6_row20_col7\" class=\"data row20 col7\" >7,677</td>\n",
       "      <td id=\"T_f77f6_row20_col8\" class=\"data row20 col8\" >22%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row21\" class=\"row_heading level0 row21\" >a_junc</th>\n",
       "      <td id=\"T_f77f6_row21_col0\" class=\"data row21 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row21_col1\" class=\"data row21 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row21_col2\" class=\"data row21 col2\" >3</td>\n",
       "      <td id=\"T_f77f6_row21_col3\" class=\"data row21 col3\" >Non-Junction</td>\n",
       "      <td id=\"T_f77f6_row21_col4\" class=\"data row21 col4\" >28,687</td>\n",
       "      <td id=\"T_f77f6_row21_col5\" class=\"data row21 col5\" >81%</td>\n",
       "      <td id=\"T_f77f6_row21_col6\" class=\"data row21 col6\" >Junction</td>\n",
       "      <td id=\"T_f77f6_row21_col7\" class=\"data row21 col7\" >4,697</td>\n",
       "      <td id=\"T_f77f6_row21_col8\" class=\"data row21 col8\" >13%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row22\" class=\"row_heading level0 row22\" >a_relrd</th>\n",
       "      <td id=\"T_f77f6_row22_col0\" class=\"data row22 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row22_col1\" class=\"data row22 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row22_col2\" class=\"data row22 col2\" >5</td>\n",
       "      <td id=\"T_f77f6_row22_col3\" class=\"data row22 col3\" >Off Roadway/Other</td>\n",
       "      <td id=\"T_f77f6_row22_col4\" class=\"data row22 col4\" >20,347</td>\n",
       "      <td id=\"T_f77f6_row22_col5\" class=\"data row22 col5\" >57%</td>\n",
       "      <td id=\"T_f77f6_row22_col6\" class=\"data row22 col6\" >On Roadway</td>\n",
       "      <td id=\"T_f77f6_row22_col7\" class=\"data row22 col7\" >12,357</td>\n",
       "      <td id=\"T_f77f6_row22_col8\" class=\"data row22 col8\" >35%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row23\" class=\"row_heading level0 row23\" >age</th>\n",
       "      <td id=\"T_f77f6_row23_col0\" class=\"data row23 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row23_col1\" class=\"data row23 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row23_col2\" class=\"data row23 col2\" >85</td>\n",
       "      <td id=\"T_f77f6_row23_col3\" class=\"data row23 col3\" >22</td>\n",
       "      <td id=\"T_f77f6_row23_col4\" class=\"data row23 col4\" >1,035</td>\n",
       "      <td id=\"T_f77f6_row23_col5\" class=\"data row23 col5\" >3%</td>\n",
       "      <td id=\"T_f77f6_row23_col6\" class=\"data row23 col6\" >21</td>\n",
       "      <td id=\"T_f77f6_row23_col7\" class=\"data row23 col7\" >1,026</td>\n",
       "      <td id=\"T_f77f6_row23_col8\" class=\"data row23 col8\" >3%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row24\" class=\"row_heading level0 row24\" >permvit</th>\n",
       "      <td id=\"T_f77f6_row24_col0\" class=\"data row24 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row24_col1\" class=\"data row24 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row24_col2\" class=\"data row24 col2\" >26</td>\n",
       "      <td id=\"T_f77f6_row24_col3\" class=\"data row24 col3\" >1</td>\n",
       "      <td id=\"T_f77f6_row24_col4\" class=\"data row24 col4\" >25,276</td>\n",
       "      <td id=\"T_f77f6_row24_col5\" class=\"data row24 col5\" >71%</td>\n",
       "      <td id=\"T_f77f6_row24_col6\" class=\"data row24 col6\" >2</td>\n",
       "      <td id=\"T_f77f6_row24_col7\" class=\"data row24 col7\" >6,553</td>\n",
       "      <td id=\"T_f77f6_row24_col8\" class=\"data row24 col8\" >18%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row25\" class=\"row_heading level0 row25\" >pernotmvit</th>\n",
       "      <td id=\"T_f77f6_row25_col0\" class=\"data row25 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row25_col1\" class=\"data row25 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row25_col2\" class=\"data row25 col2\" >13</td>\n",
       "      <td id=\"T_f77f6_row25_col3\" class=\"data row25 col3\" >0</td>\n",
       "      <td id=\"T_f77f6_row25_col4\" class=\"data row25 col4\" >24,497</td>\n",
       "      <td id=\"T_f77f6_row25_col5\" class=\"data row25 col5\" >69%</td>\n",
       "      <td id=\"T_f77f6_row25_col6\" class=\"data row25 col6\" >1</td>\n",
       "      <td id=\"T_f77f6_row25_col7\" class=\"data row25 col7\" >10,363</td>\n",
       "      <td id=\"T_f77f6_row25_col8\" class=\"data row25 col8\" >29%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row26\" class=\"row_heading level0 row26\" >a_ped</th>\n",
       "      <td id=\"T_f77f6_row26_col0\" class=\"data row26 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row26_col1\" class=\"data row26 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row26_col2\" class=\"data row26 col2\" >2</td>\n",
       "      <td id=\"T_f77f6_row26_col3\" class=\"data row26 col3\" >no</td>\n",
       "      <td id=\"T_f77f6_row26_col4\" class=\"data row26 col4\" >26,490</td>\n",
       "      <td id=\"T_f77f6_row26_col5\" class=\"data row26 col5\" >75%</td>\n",
       "      <td id=\"T_f77f6_row26_col6\" class=\"data row26 col6\" >yes</td>\n",
       "      <td id=\"T_f77f6_row26_col7\" class=\"data row26 col7\" >9,037</td>\n",
       "      <td id=\"T_f77f6_row26_col8\" class=\"data row26 col8\" >25%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row27\" class=\"row_heading level0 row27\" >mod_year</th>\n",
       "      <td id=\"T_f77f6_row27_col0\" class=\"data row27 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row27_col1\" class=\"data row27 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row27_col2\" class=\"data row27 col2\" >74</td>\n",
       "      <td id=\"T_f77f6_row27_col3\" class=\"data row27 col3\" >2005.000000</td>\n",
       "      <td id=\"T_f77f6_row27_col4\" class=\"data row27 col4\" >2,286</td>\n",
       "      <td id=\"T_f77f6_row27_col5\" class=\"data row27 col5\" >6%</td>\n",
       "      <td id=\"T_f77f6_row27_col6\" class=\"data row27 col6\" >2004.000000</td>\n",
       "      <td id=\"T_f77f6_row27_col7\" class=\"data row27 col7\" >2,223</td>\n",
       "      <td id=\"T_f77f6_row27_col8\" class=\"data row27 col8\" >6%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row28\" class=\"row_heading level0 row28\" >a_body</th>\n",
       "      <td id=\"T_f77f6_row28_col0\" class=\"data row28 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row28_col1\" class=\"data row28 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row28_col2\" class=\"data row28 col2\" >9</td>\n",
       "      <td id=\"T_f77f6_row28_col3\" class=\"data row28 col3\" >Automobiles</td>\n",
       "      <td id=\"T_f77f6_row28_col4\" class=\"data row28 col4\" >14,545</td>\n",
       "      <td id=\"T_f77f6_row28_col5\" class=\"data row28 col5\" >41%</td>\n",
       "      <td id=\"T_f77f6_row28_col6\" class=\"data row28 col6\" >Light Conventional Trucks</td>\n",
       "      <td id=\"T_f77f6_row28_col7\" class=\"data row28 col7\" >6,953</td>\n",
       "      <td id=\"T_f77f6_row28_col8\" class=\"data row28 col8\" >20%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row29\" class=\"row_heading level0 row29\" >owner</th>\n",
       "      <td id=\"T_f77f6_row29_col0\" class=\"data row29 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row29_col1\" class=\"data row29 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row29_col2\" class=\"data row29 col2\" >6</td>\n",
       "      <td id=\"T_f77f6_row29_col3\" class=\"data row29 col3\" >Driver (in this crash) Was Registered Owner</td>\n",
       "      <td id=\"T_f77f6_row29_col4\" class=\"data row29 col4\" >20,135</td>\n",
       "      <td id=\"T_f77f6_row29_col5\" class=\"data row29 col5\" >57%</td>\n",
       "      <td id=\"T_f77f6_row29_col6\" class=\"data row29 col6\" >Driver (in this crash) Not Registered Owner (other private owner listed)</td>\n",
       "      <td id=\"T_f77f6_row29_col7\" class=\"data row29 col7\" >11,647</td>\n",
       "      <td id=\"T_f77f6_row29_col8\" class=\"data row29 col8\" >33%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row30\" class=\"row_heading level0 row30\" >deaths</th>\n",
       "      <td id=\"T_f77f6_row30_col0\" class=\"data row30 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row30_col1\" class=\"data row30 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row30_col2\" class=\"data row30 col2\" >9</td>\n",
       "      <td id=\"T_f77f6_row30_col3\" class=\"data row30 col3\" >1</td>\n",
       "      <td id=\"T_f77f6_row30_col4\" class=\"data row30 col4\" >23,463</td>\n",
       "      <td id=\"T_f77f6_row30_col5\" class=\"data row30 col5\" >66%</td>\n",
       "      <td id=\"T_f77f6_row30_col6\" class=\"data row30 col6\" >0</td>\n",
       "      <td id=\"T_f77f6_row30_col7\" class=\"data row30 col7\" >10,718</td>\n",
       "      <td id=\"T_f77f6_row30_col8\" class=\"data row30 col8\" >30%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row31\" class=\"row_heading level0 row31\" >numoccs</th>\n",
       "      <td id=\"T_f77f6_row31_col0\" class=\"data row31 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row31_col1\" class=\"data row31 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row31_col2\" class=\"data row31 col2\" >30</td>\n",
       "      <td id=\"T_f77f6_row31_col3\" class=\"data row31 col3\" >1.000000</td>\n",
       "      <td id=\"T_f77f6_row31_col4\" class=\"data row31 col4\" >25,258</td>\n",
       "      <td id=\"T_f77f6_row31_col5\" class=\"data row31 col5\" >71%</td>\n",
       "      <td id=\"T_f77f6_row31_col6\" class=\"data row31 col6\" >2.000000</td>\n",
       "      <td id=\"T_f77f6_row31_col7\" class=\"data row31 col7\" >6,552</td>\n",
       "      <td id=\"T_f77f6_row31_col8\" class=\"data row31 col8\" >18%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row32\" class=\"row_heading level0 row32\" >impact1</th>\n",
       "      <td id=\"T_f77f6_row32_col0\" class=\"data row32 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row32_col1\" class=\"data row32 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row32_col2\" class=\"data row32 col2\" >24</td>\n",
       "      <td id=\"T_f77f6_row32_col3\" class=\"data row32 col3\" >Clockpoint 12</td>\n",
       "      <td id=\"T_f77f6_row32_col4\" class=\"data row32 col4\" >20,382</td>\n",
       "      <td id=\"T_f77f6_row32_col5\" class=\"data row32 col5\" >57%</td>\n",
       "      <td id=\"T_f77f6_row32_col6\" class=\"data row32 col6\" >Non-Collision</td>\n",
       "      <td id=\"T_f77f6_row32_col7\" class=\"data row32 col7\" >5,899</td>\n",
       "      <td id=\"T_f77f6_row32_col8\" class=\"data row32 col8\" >17%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row33\" class=\"row_heading level0 row33\" >deformed</th>\n",
       "      <td id=\"T_f77f6_row33_col0\" class=\"data row33 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row33_col1\" class=\"data row33 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row33_col2\" class=\"data row33 col2\" >4</td>\n",
       "      <td id=\"T_f77f6_row33_col3\" class=\"data row33 col3\" >Disabling damage</td>\n",
       "      <td id=\"T_f77f6_row33_col4\" class=\"data row33 col4\" >26,353</td>\n",
       "      <td id=\"T_f77f6_row33_col5\" class=\"data row33 col5\" >74%</td>\n",
       "      <td id=\"T_f77f6_row33_col6\" class=\"data row33 col6\" >Functional damage</td>\n",
       "      <td id=\"T_f77f6_row33_col7\" class=\"data row33 col7\" >4,458</td>\n",
       "      <td id=\"T_f77f6_row33_col8\" class=\"data row33 col8\" >13%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row34\" class=\"row_heading level0 row34\" >ve_forms</th>\n",
       "      <td id=\"T_f77f6_row34_col0\" class=\"data row34 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row34_col1\" class=\"data row34 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row34_col2\" class=\"data row34 col2\" >1</td>\n",
       "      <td id=\"T_f77f6_row34_col3\" class=\"data row34 col3\" >1</td>\n",
       "      <td id=\"T_f77f6_row34_col4\" class=\"data row34 col4\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row34_col5\" class=\"data row34 col5\" >100%</td>\n",
       "      <td id=\"T_f77f6_row34_col6\" class=\"data row34 col6\" >None</td>\n",
       "      <td id=\"T_f77f6_row34_col7\" class=\"data row34 col7\" >0</td>\n",
       "      <td id=\"T_f77f6_row34_col8\" class=\"data row34 col8\" >0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row35\" class=\"row_heading level0 row35\" >ve_total</th>\n",
       "      <td id=\"T_f77f6_row35_col0\" class=\"data row35 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row35_col1\" class=\"data row35 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row35_col2\" class=\"data row35 col2\" >12</td>\n",
       "      <td id=\"T_f77f6_row35_col3\" class=\"data row35 col3\" >1</td>\n",
       "      <td id=\"T_f77f6_row35_col4\" class=\"data row35 col4\" >34,211</td>\n",
       "      <td id=\"T_f77f6_row35_col5\" class=\"data row35 col5\" >96%</td>\n",
       "      <td id=\"T_f77f6_row35_col6\" class=\"data row35 col6\" >2</td>\n",
       "      <td id=\"T_f77f6_row35_col7\" class=\"data row35 col7\" >1,027</td>\n",
       "      <td id=\"T_f77f6_row35_col8\" class=\"data row35 col8\" >3%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row36\" class=\"row_heading level0 row36\" >weather</th>\n",
       "      <td id=\"T_f77f6_row36_col0\" class=\"data row36 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row36_col1\" class=\"data row36 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row36_col2\" class=\"data row36 col2\" >12</td>\n",
       "      <td id=\"T_f77f6_row36_col3\" class=\"data row36 col3\" >Clear</td>\n",
       "      <td id=\"T_f77f6_row36_col4\" class=\"data row36 col4\" >26,214</td>\n",
       "      <td id=\"T_f77f6_row36_col5\" class=\"data row36 col5\" >74%</td>\n",
       "      <td id=\"T_f77f6_row36_col6\" class=\"data row36 col6\" >Cloudy</td>\n",
       "      <td id=\"T_f77f6_row36_col7\" class=\"data row36 col7\" >5,367</td>\n",
       "      <td id=\"T_f77f6_row36_col8\" class=\"data row36 col8\" >15%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row37\" class=\"row_heading level0 row37\" >lgt_cond</th>\n",
       "      <td id=\"T_f77f6_row37_col0\" class=\"data row37 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row37_col1\" class=\"data row37 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row37_col2\" class=\"data row37 col2\" >8</td>\n",
       "      <td id=\"T_f77f6_row37_col3\" class=\"data row37 col3\" >Daylight</td>\n",
       "      <td id=\"T_f77f6_row37_col4\" class=\"data row37 col4\" >14,059</td>\n",
       "      <td id=\"T_f77f6_row37_col5\" class=\"data row37 col5\" >40%</td>\n",
       "      <td id=\"T_f77f6_row37_col6\" class=\"data row37 col6\" >Dark - not lighted</td>\n",
       "      <td id=\"T_f77f6_row37_col7\" class=\"data row37 col7\" >12,243</td>\n",
       "      <td id=\"T_f77f6_row37_col8\" class=\"data row37 col8\" >34%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_f77f6_level0_row38\" class=\"row_heading level0 row38\" >driver_factor</th>\n",
       "      <td id=\"T_f77f6_row38_col0\" class=\"data row38 col0\" >35,527</td>\n",
       "      <td id=\"T_f77f6_row38_col1\" class=\"data row38 col1\" >0.0%</td>\n",
       "      <td id=\"T_f77f6_row38_col2\" class=\"data row38 col2\" >3</td>\n",
       "      <td id=\"T_f77f6_row38_col3\" class=\"data row38 col3\" >other</td>\n",
       "      <td id=\"T_f77f6_row38_col4\" class=\"data row38 col4\" >20,619</td>\n",
       "      <td id=\"T_f77f6_row38_col5\" class=\"data row38 col5\" >58%</td>\n",
       "      <td id=\"T_f77f6_row38_col6\" class=\"data row38 col6\" >drunk_driver_involved</td>\n",
       "      <td id=\"T_f77f6_row38_col7\" class=\"data row38 col7\" >9,119</td>\n",
       "      <td id=\"T_f77f6_row38_col8\" class=\"data row38 col8\" >26%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x16a07b490>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "#Deop fields woth high MODE\n",
    "#df = df.drop(columns=['minute','ve_forms','a_ct','a_polpur'])\n",
    "\n",
    "# Drop Null Fields\n",
    "df = df.dropna()\n",
    "DQR = Data_Quality_Report(df)\n",
    "DQR"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Process Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Age processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def bucketize_age(age):\n",
    "    if age < 20:\n",
    "        return \"Under 20\"\n",
    "    elif age < 30:\n",
    "        return \"20-29\"\n",
    "    elif age < 40:\n",
    "        return \"30-39\"\n",
    "    elif age < 50:\n",
    "        return \"40-49\"\n",
    "    elif age < 60:\n",
    "        return \"50-59\"\n",
    "    else:\n",
    "        return \"60 and above\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def bucketize_death(deaths):\n",
    "    if deaths > 1:\n",
    "        return 1\n",
    "    else:\n",
    "        return 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def bucketize_hour(x):\n",
    "    if (x > 4) and (x <= 8):\n",
    "        return 'Early Morning'\n",
    "    elif (x > 8) and (x <= 12 ):\n",
    "        return 'Morning'\n",
    "    elif (x > 12) and (x <= 16):\n",
    "        return'Noon'\n",
    "    elif (x > 16) and (x <= 20) :\n",
    "        return 'Eve'\n",
    "    elif (x > 20) and (x <= 24):\n",
    "        return'Night'\n",
    "    elif (x <= 4):\n",
    "        return'Late Night'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Apply the bucketizing\n",
    "df['age_bucket'] = df['age'].apply(bucketize_age)\n",
    "df['death_bucket'] = df['deaths'].apply(bucketize_death)\n",
    "df['hour_bucket'] = df['hour'].apply(bucketize_hour)\n",
    "categorical_features.extend([\"age_bucket\",\"death_bucket\",\"hour_bucket\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Enconding Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "#items to drop\n",
    "#items_to_remove = ['a_ct', 'a_polpur', 've_forms']\n",
    "#for item in items_to_remove:\n",
    "    #categorical_features.remove(item)\n",
    "\n",
    "# Encoding the features\n",
    "encoder = OneHotEncoder(top_categories=10)\n",
    "\n",
    "for cat in categorical_features:\n",
    "    df[cat] = df[cat].astype(str)\n",
    "\n",
    "categorical = df[categorical_features]    \n",
    "encoder.fit(categorical)\n",
    "categorical_encoded = encoder.transform(categorical)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/Code/fatality_analysis_motor_vehicle/model_inputs_outputs/model/artifacts/label_encoder.joblib']"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target = df[target_feature]\n",
    "encoder = LabelEncoder()\n",
    "y = encoder.fit_transform(target.values.reshape(-1, 1))\n",
    "dump(encoder, LABEL_ENCODER_FILE)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Numeric"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>hour</th>\n",
       "      <th>minute</th>\n",
       "      <th>age</th>\n",
       "      <th>permvit</th>\n",
       "      <th>pernotmvit</th>\n",
       "      <th>ve_forms</th>\n",
       "      <th>ve_total</th>\n",
       "      <th>mod_year</th>\n",
       "      <th>deaths</th>\n",
       "      <th>numoccs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>62</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6</td>\n",
       "      <td>21</td>\n",
       "      <td>8.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>40</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2002.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9</td>\n",
       "      <td>15</td>\n",
       "      <td>20.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>64</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1999.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9</td>\n",
       "      <td>28</td>\n",
       "      <td>20.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1996.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>8</td>\n",
       "      <td>28</td>\n",
       "      <td>12.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>79</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2007.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45281</th>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>20.0</td>\n",
       "      <td>42.0</td>\n",
       "      <td>24</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45282</th>\n",
       "      <td>5</td>\n",
       "      <td>15</td>\n",
       "      <td>4.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1998.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45283</th>\n",
       "      <td>12</td>\n",
       "      <td>5</td>\n",
       "      <td>6.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45284</th>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>23.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45285</th>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>19.0</td>\n",
       "      <td>30.0</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>35527 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       month  day  hour  minute  age  permvit  pernotmvit  ve_forms  ve_total  \\\n",
       "0         10    2   3.0    10.0   62        1           0         1         1   \n",
       "1          6   21   8.0    45.0   40        1           0         1         1   \n",
       "3          9   15  20.0    46.0   64        1           1         1         1   \n",
       "4          9   28  20.0    24.0   45        1           0         1         1   \n",
       "5          8   28  12.0    35.0   79        1           0         1         1   \n",
       "...      ...  ...   ...     ...  ...      ...         ...       ...       ...   \n",
       "45281      3   12  20.0    42.0   24        2           1         1         2   \n",
       "45282      5   15   4.0    53.0   18        1           0         1         1   \n",
       "45283     12    5   6.0    15.0   43        1           0         1         1   \n",
       "45284      5   12  23.0    51.0   21        1           0         1         1   \n",
       "45285      7   30  19.0    30.0   47        1           0         1         1   \n",
       "\n",
       "       mod_year  deaths  numoccs  \n",
       "0        2003.0       1      1.0  \n",
       "1        2002.0       1      1.0  \n",
       "3        1999.0       0      1.0  \n",
       "4        1996.0       1      1.0  \n",
       "5        2007.0       1      1.0  \n",
       "...         ...     ...      ...  \n",
       "45281    2015.0       0      2.0  \n",
       "45282    1998.0       1      1.0  \n",
       "45283    2015.0       1      1.0  \n",
       "45284    2010.0       1      1.0  \n",
       "45285    2003.0       1      1.0  \n",
       "\n",
       "[35527 rows x 12 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#items to drop\n",
    "\"\"\"\n",
    "items_to_remove = ['minute', 'age', 'mod_year']\n",
    "for item in items_to_remove:\n",
    "    numeric_features.remove(item)\n",
    "\"\"\"\n",
    "numeric = df[numeric_features]\n",
    "numeric"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Feature Selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Apply Chi-Squared test to each categorical feature\n",
    "chi2_results = {}\n",
    "for cat_feature in categorical_features:\n",
    "    contingency_table = pd.crosstab(df[cat_feature], df[target_feature])\n",
    "    chi2, p_value, dof, expected = chi2_contingency(contingency_table)\n",
    "    chi2_results[cat_feature] = {\"chi2\": chi2, \"p_value\": p_value}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Sort the features based on their p-values\n",
    "sorted_features = sorted(chi2_results.keys(), key=lambda x: chi2_results[x][\"p_value\"])\n",
    "\n",
    "# Filter Chi-Squared test results for p-values above 0.05\n",
    "unsignificant_results = {feature: result for feature, result in chi2_results.items() if result[\"p_value\"] > 0.05}\n",
    "\n",
    "# Extract unsignificant feature names to a list\n",
    "unsignificant_results_list = list(unsignificant_results.keys())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['a_ct']"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "unsignificant_results_list"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Updated catagorical features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "#items to drop\n",
    "items_to_remove = unsignificant_results_list\n",
    "for item in items_to_remove:\n",
    "    try:\n",
    "        categorical_features.remove(item)\n",
    "    except:\n",
    "        pass\n",
    "\n",
    "\n",
    "# Encoding the features\n",
    "encoder = OneHotEncoder(top_categories=10)\n",
    "\n",
    "for cat in categorical_features:\n",
    "    df[cat] = df[cat].astype(str)\n",
    "\n",
    "categorical = df[categorical_features]    \n",
    "encoder.fit(categorical)\n",
    "categorical_encoded = encoder.transform(categorical)\n",
    "categorical_encoded\n",
    "\n",
    "# Saving the encoder to use it on the testing dataset\n",
    "path = dump(encoder, OHE_ENCODER_FILE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 35527 entries, 0 to 45285\n",
      "Data columns (total 27 columns):\n",
      " #   Column        Non-Null Count  Dtype \n",
      "---  ------        --------------  ----- \n",
      " 0   fatals        35527 non-null  object\n",
      " 1   a_ped_f       35527 non-null  object\n",
      " 2   a_pedal_f     35527 non-null  object\n",
      " 3   a_roll        35527 non-null  object\n",
      " 4   a_hr          35527 non-null  object\n",
      " 5   a_polpur      35527 non-null  object\n",
      " 6   day_week      35527 non-null  object\n",
      " 7   a_dow_type    35527 non-null  object\n",
      " 8   a_tod_type    35527 non-null  object\n",
      " 9   state         35527 non-null  object\n",
      " 10  a_region      35527 non-null  object\n",
      " 11  a_ru          35527 non-null  object\n",
      " 12  a_inter       35527 non-null  object\n",
      " 13  a_intsec      35527 non-null  object\n",
      " 14  a_roadfc      35527 non-null  object\n",
      " 15  a_junc        35527 non-null  object\n",
      " 16  a_relrd       35527 non-null  object\n",
      " 17  a_ped         35527 non-null  object\n",
      " 18  a_body        35527 non-null  object\n",
      " 19  owner         35527 non-null  object\n",
      " 20  impact1       35527 non-null  object\n",
      " 21  deformed      35527 non-null  object\n",
      " 22  weather       35527 non-null  object\n",
      " 23  lgt_cond      35527 non-null  object\n",
      " 24  age_bucket    35527 non-null  object\n",
      " 25  death_bucket  35527 non-null  object\n",
      " 26  hour_bucket   35527 non-null  object\n",
      "dtypes: object(27)\n",
      "memory usage: 7.6+ MB\n"
     ]
    }
   ],
   "source": [
    "categorical.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Modeling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(categorical_encoded, y, test_size=0.2, random_state=18)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random Forest - Macro-Averaged F1 Score: 0.5374\n",
      "Gradient Boosting - Macro-Averaged F1 Score: 0.5777\n",
      "LogisticRegression - Macro-Averaged F1 Score: 0.5624\n"
     ]
    }
   ],
   "source": [
    "# List of classifier models\n",
    "models = [\n",
    "    ('Random Forest', RandomForestClassifier(n_estimators=100, random_state=19)),\n",
    "    ('Gradient Boosting',GradientBoostingClassifier(learning_rate=0.2,max_depth=4,n_estimators=150)),\n",
    "    ('LogisticRegression',LogisticRegression(C=100, penalty='l2', solver='liblinear'))\n",
    "    #('Gradient Boosting', GradientBoostingClassifier(learning_rate: 0.2, max_depth: 4, n_estimators: 150))\n",
    "    #('SVM', SVC(kernel='linear', C=1.0, random_state=19)),\n",
    "    ##('K-Nearest Neighbors', KNeighborsClassifier(n_neighbors=5)),\n",
    "    #('MLP', MLPClassifier(hidden_layer_sizes=(100,), max_iter=500, random_state=19)),\n",
    "    #('Naive Bayes', GaussianNB())\n",
    "]\n",
    "\n",
    "\n",
    "\n",
    "# Train and evaluate each model\n",
    "for model_name, model in models:\n",
    "    model.fit(X_train, y_train)\n",
    "    y_pred = model.predict(X_test)\n",
    "    macro_f1 = f1_score(y_test, y_pred, average='macro')\n",
    "    print(f\"{model_name} - Macro-Averaged F1 Score: {macro_f1:.4f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Save Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "model = GradientBoostingClassifier(learning_rate=0.2,max_depth=4,n_estimators=150)\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Saving the model to use it for predictions\n",
    "path = dump(model, PREDICTOR_FILE_PATH)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Hyperparameter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[27], line 15\u001b[0m\n\u001b[1;32m     12\u001b[0m grid_search \u001b[39m=\u001b[39m GridSearchCV(estimator\u001b[39m=\u001b[39mmodel, param_grid\u001b[39m=\u001b[39mparam_grid, cv\u001b[39m=\u001b[39m\u001b[39m5\u001b[39m, scoring\u001b[39m=\u001b[39m\u001b[39m'\u001b[39m\u001b[39maccuracy\u001b[39m\u001b[39m'\u001b[39m)\n\u001b[1;32m     14\u001b[0m \u001b[39m# Perform hyperparameter tuning on the training data\u001b[39;00m\n\u001b[0;32m---> 15\u001b[0m grid_search\u001b[39m.\u001b[39;49mfit(X_train, y_train)\n\u001b[1;32m     17\u001b[0m \u001b[39m# Get the best hyperparameters\u001b[39;00m\n\u001b[1;32m     18\u001b[0m best_params \u001b[39m=\u001b[39m grid_search\u001b[39m.\u001b[39mbest_params_\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/base.py:1151\u001b[0m, in \u001b[0;36m_fit_context.<locals>.decorator.<locals>.wrapper\u001b[0;34m(estimator, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1144\u001b[0m     estimator\u001b[39m.\u001b[39m_validate_params()\n\u001b[1;32m   1146\u001b[0m \u001b[39mwith\u001b[39;00m config_context(\n\u001b[1;32m   1147\u001b[0m     skip_parameter_validation\u001b[39m=\u001b[39m(\n\u001b[1;32m   1148\u001b[0m         prefer_skip_nested_validation \u001b[39mor\u001b[39;00m global_skip_validation\n\u001b[1;32m   1149\u001b[0m     )\n\u001b[1;32m   1150\u001b[0m ):\n\u001b[0;32m-> 1151\u001b[0m     \u001b[39mreturn\u001b[39;00m fit_method(estimator, \u001b[39m*\u001b[39;49margs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_search.py:898\u001b[0m, in \u001b[0;36mBaseSearchCV.fit\u001b[0;34m(self, X, y, groups, **fit_params)\u001b[0m\n\u001b[1;32m    892\u001b[0m     results \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_format_results(\n\u001b[1;32m    893\u001b[0m         all_candidate_params, n_splits, all_out, all_more_results\n\u001b[1;32m    894\u001b[0m     )\n\u001b[1;32m    896\u001b[0m     \u001b[39mreturn\u001b[39;00m results\n\u001b[0;32m--> 898\u001b[0m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_run_search(evaluate_candidates)\n\u001b[1;32m    900\u001b[0m \u001b[39m# multimetric is determined here because in the case of a callable\u001b[39;00m\n\u001b[1;32m    901\u001b[0m \u001b[39m# self.scoring the return type is only known after calling\u001b[39;00m\n\u001b[1;32m    902\u001b[0m first_test_score \u001b[39m=\u001b[39m all_out[\u001b[39m0\u001b[39m][\u001b[39m\"\u001b[39m\u001b[39mtest_scores\u001b[39m\u001b[39m\"\u001b[39m]\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_search.py:1419\u001b[0m, in \u001b[0;36mGridSearchCV._run_search\u001b[0;34m(self, evaluate_candidates)\u001b[0m\n\u001b[1;32m   1417\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39m_run_search\u001b[39m(\u001b[39mself\u001b[39m, evaluate_candidates):\n\u001b[1;32m   1418\u001b[0m \u001b[39m    \u001b[39m\u001b[39m\"\"\"Search all candidates in param_grid\"\"\"\u001b[39;00m\n\u001b[0;32m-> 1419\u001b[0m     evaluate_candidates(ParameterGrid(\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mparam_grid))\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_search.py:845\u001b[0m, in \u001b[0;36mBaseSearchCV.fit.<locals>.evaluate_candidates\u001b[0;34m(candidate_params, cv, more_results)\u001b[0m\n\u001b[1;32m    837\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mverbose \u001b[39m>\u001b[39m \u001b[39m0\u001b[39m:\n\u001b[1;32m    838\u001b[0m     \u001b[39mprint\u001b[39m(\n\u001b[1;32m    839\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mFitting \u001b[39m\u001b[39m{0}\u001b[39;00m\u001b[39m folds for each of \u001b[39m\u001b[39m{1}\u001b[39;00m\u001b[39m candidates,\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m    840\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39m totalling \u001b[39m\u001b[39m{2}\u001b[39;00m\u001b[39m fits\u001b[39m\u001b[39m\"\u001b[39m\u001b[39m.\u001b[39mformat(\n\u001b[1;32m    841\u001b[0m             n_splits, n_candidates, n_candidates \u001b[39m*\u001b[39m n_splits\n\u001b[1;32m    842\u001b[0m         )\n\u001b[1;32m    843\u001b[0m     )\n\u001b[0;32m--> 845\u001b[0m out \u001b[39m=\u001b[39m parallel(\n\u001b[1;32m    846\u001b[0m     delayed(_fit_and_score)(\n\u001b[1;32m    847\u001b[0m         clone(base_estimator),\n\u001b[1;32m    848\u001b[0m         X,\n\u001b[1;32m    849\u001b[0m         y,\n\u001b[1;32m    850\u001b[0m         train\u001b[39m=\u001b[39;49mtrain,\n\u001b[1;32m    851\u001b[0m         test\u001b[39m=\u001b[39;49mtest,\n\u001b[1;32m    852\u001b[0m         parameters\u001b[39m=\u001b[39;49mparameters,\n\u001b[1;32m    853\u001b[0m         split_progress\u001b[39m=\u001b[39;49m(split_idx, n_splits),\n\u001b[1;32m    854\u001b[0m         candidate_progress\u001b[39m=\u001b[39;49m(cand_idx, n_candidates),\n\u001b[1;32m    855\u001b[0m         \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mfit_and_score_kwargs,\n\u001b[1;32m    856\u001b[0m     )\n\u001b[1;32m    857\u001b[0m     \u001b[39mfor\u001b[39;49;00m (cand_idx, parameters), (split_idx, (train, test)) \u001b[39min\u001b[39;49;00m product(\n\u001b[1;32m    858\u001b[0m         \u001b[39menumerate\u001b[39;49m(candidate_params), \u001b[39menumerate\u001b[39;49m(cv\u001b[39m.\u001b[39;49msplit(X, y, groups))\n\u001b[1;32m    859\u001b[0m     )\n\u001b[1;32m    860\u001b[0m )\n\u001b[1;32m    862\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mlen\u001b[39m(out) \u001b[39m<\u001b[39m \u001b[39m1\u001b[39m:\n\u001b[1;32m    863\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\n\u001b[1;32m    864\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mNo fits were performed. \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m    865\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mWas the CV iterator empty? \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m    866\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mWere there no candidates?\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m    867\u001b[0m     )\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/parallel.py:65\u001b[0m, in \u001b[0;36mParallel.__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m     60\u001b[0m config \u001b[39m=\u001b[39m get_config()\n\u001b[1;32m     61\u001b[0m iterable_with_config \u001b[39m=\u001b[39m (\n\u001b[1;32m     62\u001b[0m     (_with_config(delayed_func, config), args, kwargs)\n\u001b[1;32m     63\u001b[0m     \u001b[39mfor\u001b[39;00m delayed_func, args, kwargs \u001b[39min\u001b[39;00m iterable\n\u001b[1;32m     64\u001b[0m )\n\u001b[0;32m---> 65\u001b[0m \u001b[39mreturn\u001b[39;00m \u001b[39msuper\u001b[39;49m()\u001b[39m.\u001b[39;49m\u001b[39m__call__\u001b[39;49m(iterable_with_config)\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/joblib/parallel.py:1863\u001b[0m, in \u001b[0;36mParallel.__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1861\u001b[0m     output \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_get_sequential_output(iterable)\n\u001b[1;32m   1862\u001b[0m     \u001b[39mnext\u001b[39m(output)\n\u001b[0;32m-> 1863\u001b[0m     \u001b[39mreturn\u001b[39;00m output \u001b[39mif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mreturn_generator \u001b[39melse\u001b[39;00m \u001b[39mlist\u001b[39;49m(output)\n\u001b[1;32m   1865\u001b[0m \u001b[39m# Let's create an ID that uniquely identifies the current call. If the\u001b[39;00m\n\u001b[1;32m   1866\u001b[0m \u001b[39m# call is interrupted early and that the same instance is immediately\u001b[39;00m\n\u001b[1;32m   1867\u001b[0m \u001b[39m# re-used, this id will be used to prevent workers that were\u001b[39;00m\n\u001b[1;32m   1868\u001b[0m \u001b[39m# concurrently finalizing a task from the previous call to run the\u001b[39;00m\n\u001b[1;32m   1869\u001b[0m \u001b[39m# callback.\u001b[39;00m\n\u001b[1;32m   1870\u001b[0m \u001b[39mwith\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_lock:\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/joblib/parallel.py:1792\u001b[0m, in \u001b[0;36mParallel._get_sequential_output\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   1790\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mn_dispatched_batches \u001b[39m+\u001b[39m\u001b[39m=\u001b[39m \u001b[39m1\u001b[39m\n\u001b[1;32m   1791\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mn_dispatched_tasks \u001b[39m+\u001b[39m\u001b[39m=\u001b[39m \u001b[39m1\u001b[39m\n\u001b[0;32m-> 1792\u001b[0m res \u001b[39m=\u001b[39m func(\u001b[39m*\u001b[39;49margs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m   1793\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mn_completed_tasks \u001b[39m+\u001b[39m\u001b[39m=\u001b[39m \u001b[39m1\u001b[39m\n\u001b[1;32m   1794\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mprint_progress()\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/parallel.py:127\u001b[0m, in \u001b[0;36m_FuncWrapper.__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    125\u001b[0m     config \u001b[39m=\u001b[39m {}\n\u001b[1;32m    126\u001b[0m \u001b[39mwith\u001b[39;00m config_context(\u001b[39m*\u001b[39m\u001b[39m*\u001b[39mconfig):\n\u001b[0;32m--> 127\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mfunction(\u001b[39m*\u001b[39;49margs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:732\u001b[0m, in \u001b[0;36m_fit_and_score\u001b[0;34m(estimator, X, y, scorer, train, test, verbose, parameters, fit_params, return_train_score, return_parameters, return_n_test_samples, return_times, return_estimator, split_progress, candidate_progress, error_score)\u001b[0m\n\u001b[1;32m    730\u001b[0m         estimator\u001b[39m.\u001b[39mfit(X_train, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mfit_params)\n\u001b[1;32m    731\u001b[0m     \u001b[39melse\u001b[39;00m:\n\u001b[0;32m--> 732\u001b[0m         estimator\u001b[39m.\u001b[39;49mfit(X_train, y_train, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mfit_params)\n\u001b[1;32m    734\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mException\u001b[39;00m:\n\u001b[1;32m    735\u001b[0m     \u001b[39m# Note fit time as time until error\u001b[39;00m\n\u001b[1;32m    736\u001b[0m     fit_time \u001b[39m=\u001b[39m time\u001b[39m.\u001b[39mtime() \u001b[39m-\u001b[39m start_time\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/base.py:1151\u001b[0m, in \u001b[0;36m_fit_context.<locals>.decorator.<locals>.wrapper\u001b[0;34m(estimator, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1144\u001b[0m     estimator\u001b[39m.\u001b[39m_validate_params()\n\u001b[1;32m   1146\u001b[0m \u001b[39mwith\u001b[39;00m config_context(\n\u001b[1;32m   1147\u001b[0m     skip_parameter_validation\u001b[39m=\u001b[39m(\n\u001b[1;32m   1148\u001b[0m         prefer_skip_nested_validation \u001b[39mor\u001b[39;00m global_skip_validation\n\u001b[1;32m   1149\u001b[0m     )\n\u001b[1;32m   1150\u001b[0m ):\n\u001b[0;32m-> 1151\u001b[0m     \u001b[39mreturn\u001b[39;00m fit_method(estimator, \u001b[39m*\u001b[39;49margs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:1227\u001b[0m, in \u001b[0;36mLogisticRegression.fit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m   1221\u001b[0m     \u001b[39mif\u001b[39;00m effective_n_jobs(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39mn_jobs) \u001b[39m!=\u001b[39m \u001b[39m1\u001b[39m:\n\u001b[1;32m   1222\u001b[0m         warnings\u001b[39m.\u001b[39mwarn(\n\u001b[1;32m   1223\u001b[0m             \u001b[39m\"\u001b[39m\u001b[39m'\u001b[39m\u001b[39mn_jobs\u001b[39m\u001b[39m'\u001b[39m\u001b[39m > 1 does not have any effect when\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m   1224\u001b[0m             \u001b[39m\"\u001b[39m\u001b[39m \u001b[39m\u001b[39m'\u001b[39m\u001b[39msolver\u001b[39m\u001b[39m'\u001b[39m\u001b[39m is set to \u001b[39m\u001b[39m'\u001b[39m\u001b[39mliblinear\u001b[39m\u001b[39m'\u001b[39m\u001b[39m. Got \u001b[39m\u001b[39m'\u001b[39m\u001b[39mn_jobs\u001b[39m\u001b[39m'\u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m   1225\u001b[0m             \u001b[39m\"\u001b[39m\u001b[39m = \u001b[39m\u001b[39m{}\u001b[39;00m\u001b[39m.\u001b[39m\u001b[39m\"\u001b[39m\u001b[39m.\u001b[39mformat(effective_n_jobs(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39mn_jobs))\n\u001b[1;32m   1226\u001b[0m         )\n\u001b[0;32m-> 1227\u001b[0m     \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mcoef_, \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mintercept_, \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mn_iter_ \u001b[39m=\u001b[39m _fit_liblinear(\n\u001b[1;32m   1228\u001b[0m         X,\n\u001b[1;32m   1229\u001b[0m         y,\n\u001b[1;32m   1230\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mC,\n\u001b[1;32m   1231\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mfit_intercept,\n\u001b[1;32m   1232\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mintercept_scaling,\n\u001b[1;32m   1233\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mclass_weight,\n\u001b[1;32m   1234\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mpenalty,\n\u001b[1;32m   1235\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mdual,\n\u001b[1;32m   1236\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mverbose,\n\u001b[1;32m   1237\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mmax_iter,\n\u001b[1;32m   1238\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mtol,\n\u001b[1;32m   1239\u001b[0m         \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mrandom_state,\n\u001b[1;32m   1240\u001b[0m         sample_weight\u001b[39m=\u001b[39;49msample_weight,\n\u001b[1;32m   1241\u001b[0m     )\n\u001b[1;32m   1242\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39m\n\u001b[1;32m   1244\u001b[0m \u001b[39mif\u001b[39;00m solver \u001b[39min\u001b[39;00m [\u001b[39m\"\u001b[39m\u001b[39msag\u001b[39m\u001b[39m\"\u001b[39m, \u001b[39m\"\u001b[39m\u001b[39msaga\u001b[39m\u001b[39m\"\u001b[39m]:\n",
      "File \u001b[0;32m~/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/svm/_base.py:1222\u001b[0m, in \u001b[0;36m_fit_liblinear\u001b[0;34m(X, y, C, fit_intercept, intercept_scaling, class_weight, penalty, dual, verbose, max_iter, tol, random_state, multi_class, loss, epsilon, sample_weight)\u001b[0m\n\u001b[1;32m   1219\u001b[0m sample_weight \u001b[39m=\u001b[39m _check_sample_weight(sample_weight, X, dtype\u001b[39m=\u001b[39mnp\u001b[39m.\u001b[39mfloat64)\n\u001b[1;32m   1221\u001b[0m solver_type \u001b[39m=\u001b[39m _get_liblinear_solver_type(multi_class, penalty, loss, dual)\n\u001b[0;32m-> 1222\u001b[0m raw_coef_, n_iter_ \u001b[39m=\u001b[39m liblinear\u001b[39m.\u001b[39;49mtrain_wrap(\n\u001b[1;32m   1223\u001b[0m     X,\n\u001b[1;32m   1224\u001b[0m     y_ind,\n\u001b[1;32m   1225\u001b[0m     sp\u001b[39m.\u001b[39;49misspmatrix(X),\n\u001b[1;32m   1226\u001b[0m     solver_type,\n\u001b[1;32m   1227\u001b[0m     tol,\n\u001b[1;32m   1228\u001b[0m     bias,\n\u001b[1;32m   1229\u001b[0m     C,\n\u001b[1;32m   1230\u001b[0m     class_weight_,\n\u001b[1;32m   1231\u001b[0m     max_iter,\n\u001b[1;32m   1232\u001b[0m     rnd\u001b[39m.\u001b[39;49mrandint(np\u001b[39m.\u001b[39;49miinfo(\u001b[39m\"\u001b[39;49m\u001b[39mi\u001b[39;49m\u001b[39m\"\u001b[39;49m)\u001b[39m.\u001b[39;49mmax),\n\u001b[1;32m   1233\u001b[0m     epsilon,\n\u001b[1;32m   1234\u001b[0m     sample_weight,\n\u001b[1;32m   1235\u001b[0m )\n\u001b[1;32m   1236\u001b[0m \u001b[39m# Regarding rnd.randint(..) in the above signature:\u001b[39;00m\n\u001b[1;32m   1237\u001b[0m \u001b[39m# seed for srand in range [0..INT_MAX); due to limitations in Numpy\u001b[39;00m\n\u001b[1;32m   1238\u001b[0m \u001b[39m# on 32-bit platforms, we can't get to the UINT_MAX limit that\u001b[39;00m\n\u001b[1;32m   1239\u001b[0m \u001b[39m# srand supports\u001b[39;00m\n\u001b[1;32m   1240\u001b[0m n_iter_max \u001b[39m=\u001b[39m \u001b[39mmax\u001b[39m(n_iter_)\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "# Initialize the Logistic Regression model\n",
    "model = LogisticRegression()\n",
    "\n",
    "# Define a grid of hyperparameters to search\n",
    "param_grid = {\n",
    "    'penalty': ['l1', 'l2'],  # Regularization penalty (L1 or L2)\n",
    "    'C': [0.01, 0.1, 1, 10, 100],  # Inverse of regularization strength\n",
    "    'solver': ['liblinear', 'saga']  # Optimization algorithm\n",
    "}\n",
    "\n",
    "# Initialize GridSearchCV with the Logistic Regression model and parameter grid\n",
    "grid_search = GridSearchCV(estimator=model, param_grid=param_grid, cv=5, scoring='accuracy')\n",
    "\n",
    "# Perform hyperparameter tuning on the training data\n",
    "grid_search.fit(X_train, y_train)\n",
    "\n",
    "# Get the best hyperparameters\n",
    "best_params = grid_search.best_params_\n",
    "print(\"Best Hyperparameters:\", best_params)\n",
    "\n",
    "# Use the best model to predict on the test data\n",
    "best_model = grid_search.best_estimator_\n",
    "y_pred = best_model.predict(X_test)\n",
    "\n",
    "# Calculate the accuracy of the best model\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(f\"Accuracy: {accuracy:.2f}\")\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best parameters for RandomForestClassifier: {'max_depth': None, 'min_samples_split': 5, 'n_estimators': 150}\n",
      "Macro-Averaged F1 Score: 0.5432\n",
      "Best parameters for GradientBoostingClassifier: {'learning_rate': 0.2, 'max_depth': 4, 'n_estimators': 150}\n",
      "Macro-Averaged F1 Score: 0.5825\n",
      "Best parameters for SVC: {'C': 10, 'kernel': 'linear'}\n",
      "Macro-Averaged F1 Score: 0.5524\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:824: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to nan. Details: \n",
      "Traceback (most recent call last):\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_validation.py\", line 813, in _score\n",
      "    scores = scorer(estimator, X_test, y_test)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 266, in __call__\n",
      "    return self._score(partial(_cached_call, None), estimator, X, y_true, **_kwargs)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 353, in _score\n",
      "    y_pred = method_caller(estimator, \"predict\", X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_scorer.py\", line 86, in _cached_call\n",
      "    result, _ = _get_response_values(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/utils/_response.py\", line 85, in _get_response_values\n",
      "    y_pred = prediction_method(X)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neighbors/_classification.py\", line 246, in predict\n",
      "    if self._fit_method == \"brute\" and ArgKminClassMode.is_usable_for(\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 471, in is_usable_for\n",
      "    ArgKmin.is_usable_for(X, Y, metric)\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 115, in is_usable_for\n",
      "    and (is_numpy_c_ordered(X) or is_valid_sparse_matrix(X))\n",
      "  File \"/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/metrics/_pairwise_distances_reduction/_dispatcher.py\", line 99, in is_numpy_c_ordered\n",
      "    return hasattr(X, \"flags\") and X.flags.c_contiguous\n",
      "AttributeError: 'Flags' object has no attribute 'c_contiguous'\n",
      "\n",
      "  warnings.warn(\n",
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/model_selection/_search.py:976: UserWarning: One or more of the test scores are non-finite: [       nan 0.4730599         nan 0.48532276        nan 0.4882707 ]\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best parameters for KNeighborsClassifier: {'n_neighbors': 7, 'weights': 'distance'}\n",
      "Macro-Averaged F1 Score: 0.4793\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/salvadorsanchez/Dropbox/ADS/Hackathon 2023/fars/lib/python3.10/site-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (500) reached and the optimization hasn't converged yet.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best parameters for MLPClassifier: {'alpha': 0.01, 'hidden_layer_sizes': (50,)}\n",
      "Macro-Averaged F1 Score: 0.5707\n"
     ]
    }
   ],
   "source": [
    "# Define parameter grids for each model\n",
    "param_grid_rf = {\n",
    "    'n_estimators': [50, 100, 150],\n",
    "    'max_depth': [None, 10, 20],\n",
    "    'min_samples_split': [2, 5, 10]\n",
    "}\n",
    "\n",
    "param_grid_gb = {\n",
    "    'n_estimators': [50, 100, 150],\n",
    "    'learning_rate': [0.01, 0.1, 0.2],\n",
    "    'max_depth': [3, 4, 5]\n",
    "}\n",
    "\n",
    "param_grid_svm = {\n",
    "    'C': [0.1, 1, 10],\n",
    "    'kernel': ['linear', 'rbf']\n",
    "}\n",
    "\n",
    "param_grid_knn = {\n",
    "    'n_neighbors': [3, 5, 7],\n",
    "    'weights': ['uniform', 'distance']\n",
    "}\n",
    "\n",
    "param_grid_mlp = {\n",
    "    'hidden_layer_sizes': [(50,), (100,), (50, 50)],\n",
    "    'alpha': [0.0001, 0.001, 0.01]\n",
    "}\n",
    "\n",
    "# List of models and corresponding parameter grids\n",
    "models_params = [\n",
    "    (RandomForestClassifier(), param_grid_rf),\n",
    "    (GradientBoostingClassifier(), param_grid_gb),\n",
    "    (SVC(), param_grid_svm),\n",
    "    (KNeighborsClassifier(), param_grid_knn),\n",
    "    (MLPClassifier(max_iter=500), param_grid_mlp),\n",
    "]\n",
    "\n",
    "\n",
    "\n",
    "# Perform grid search for each model\n",
    "for model, param_grid in models_params:\n",
    "    grid_search = GridSearchCV(model, param_grid, cv=5, scoring='f1_macro')\n",
    "    grid_search.fit(X_train, y_train)\n",
    "    \n",
    "    best_model = grid_search.best_estimator_\n",
    "    y_pred = best_model.predict(X_test)\n",
    "    macro_f1 = f1_score(y_test, y_pred, average='macro')\n",
    "    \n",
    "    print(f\"Best parameters for {model.__class__.__name__}: {grid_search.best_params_}\")\n",
    "    print(f\"Macro-Averaged F1 Score: {macro_f1:.4f}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "fars",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
